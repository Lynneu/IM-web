{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0fa23b7a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Test Chat\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"section\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Register\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"section\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add Friend\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"section\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Send Message\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"section\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Friends List\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"status-online\"\n};\nconst _hoisted_12 = {\n  key: 1,\n  class: \"status-offline\"\n};\nconst _hoisted_13 = {\n  key: 1\n};\nconst _hoisted_14 = {\n  class: \"section\"\n};\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Message List\", -1 /* HOISTED */));\nconst _hoisted_16 = {\n  key: 0\n};\nconst _hoisted_17 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" User Registration \"), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.registerUser.username = $event),\n    placeholder: \"username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.registerUser.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.registerUser.email = $event),\n    placeholder: \"email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.registerUser.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.registerUser.password = $event),\n    placeholder: \"password\",\n    type: \"password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.registerUser.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.register && $setup.register(...args))\n  }, \"Register\")]), _createCommentVNode(\" Add Friend \"), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.friendId = $event),\n    placeholder: \"friend's ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.friendId]]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $setup.addFriend && $setup.addFriend(...args))\n  }, \"Add Friend\")]), _createCommentVNode(\" Send Message \"), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.friendId = $event),\n    placeholder: \"friend's ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.friendId]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.message = $event),\n    placeholder: \"message\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.message]]), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $setup.sendMessage && $setup.sendMessage(...args))\n  }, \"Send Message\")]), _createCommentVNode(\" Friends List \"), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, $setup.friends.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.friends, (friend, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: key,\n      class: \"friend-item\"\n    }, [_createElementVNode(\"div\", null, [_createTextVNode(_toDisplayString(friend.username) + \" \", 1 /* TEXT */), friend.online == true ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, \"[Online]\")) : _createCommentVNode(\"v-if\", true), friend.online == false ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, \"[Offline]\")) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, \"- No Friends -\"))]), _createCommentVNode(\" Receive Message \"), _createElementVNode(\"div\", _hoisted_14, [_hoisted_15, $setup.receiveMessage.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.receiveMessage, (msg, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: key,\n      class: \"message-item\"\n    }, _toDisplayString(msg), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, \"- No Messages -\"))])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","$setup","registerUser","username","$event","placeholder","email","password","type","onClick","_cache","args","register","_hoisted_4","_hoisted_5","friendId","addFriend","_hoisted_6","_hoisted_7","message","sendMessage","_hoisted_8","_hoisted_9","friends","length","_hoisted_10","_Fragment","_renderList","friend","key","online","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","receiveMessage","_hoisted_16","msg","_hoisted_17"],"sources":["/Users/lynneu/Documents/GitHub/im-frontend/src/views/helloWorld.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Test Chat</h1>\n  \n      <!-- User Registration -->\n      <div class=\"section\">\n        <h2>Register</h2>\n        <input v-model=\"registerUser.username\" placeholder=\"username\" />\n        <input v-model=\"registerUser.email\" placeholder=\"email\" />\n        <input v-model=\"registerUser.password\" placeholder=\"password\" type=\"password\" />\n        <button @click=\"register\">Register</button>\n      </div>\n    \n      <!-- Add Friend -->\n      <div class=\"section\">\n        <h2>Add Friend</h2>\n        <input v-model=\"friendId\" placeholder=\"friend's ID\" />\n        <button @click=\"addFriend\">Add Friend</button>\n      </div>\n  \n      <!-- Send Message -->\n      <div class=\"section\">\n        <h2>Send Message</h2>\n        <input v-model=\"friendId\" placeholder=\"friend's ID\" />\n        <input v-model=\"message\" placeholder=\"message\" />\n        <button @click=\"sendMessage\">Send Message</button>\n      </div>\n  \n       <!-- Friends List -->\n       <div class=\"section\">\n        <h2>Friends List</h2>\n        <div v-if=\"friends.length\">\n          <div v-for=\"(friend, key) in friends\" :key=\"key\" class=\"friend-item\">\n            <div>\n              {{ friend.username }}\n              <span v-if=\"friend.online == true\" class=\"status-online\">[Online]</span>\n              <span v-if=\"friend.online == false\" class=\"status-offline\">[Offline]</span>\n            </div>\n          </div>\n        </div>\n        <div v-else>- No Friends -</div>\n      </div>\n  \n       <!-- Receive Message -->\n       <div class=\"section\">\n        <h2>Message List</h2>\n        <div v-if=\"receiveMessage.length\">\n          <div v-for=\"(msg, key) in receiveMessage\" :key=\"key\" class=\"message-item\">\n            {{ msg }}\n          </div>\n        </div>\n        <div v-else>- No Messages -</div>\n      </div>\n    </div>\n</template>\n\n  \n  <script>\n  import { ref, reactive, computed, onMounted, inject } from \"vue\";\n  import axios from 'axios';\n  \n  export default {\n    name: 'HelloWorld',\n    setup() {\n      const friends = ref([]);\n      const socket = inject('socket');\n      const fetchFriends = async () => {\n        const userId = JSON.parse(localStorage.getItem('user')).id\n        console.log(userId)\n        const response = await axios.get(`http://localhost:8000/users/${userId}/friends`)\n        friends.value = response.data\n      }\n      onMounted(fetchFriends)\n\n      const registerUser = reactive({\n        username: '',\n        email: '',\n        password: '',\n      });      \n  \n      const friendId = ref(\"\");\n      const message = ref(\"\");\n      const receiveMessage = ref([])\n  \n      const user = computed(() => {\n        // Get user from localStorage and parse it\n        const storedUser = localStorage.getItem('user');\n        return storedUser ? JSON.parse(storedUser) : null;\n      });\n  \n      const register = async () => {\n        try {\n          const response = await axios.post(\"http://localhost:8000/users/\", {\n            username: registerUser.username,\n            email: registerUser.email,\n            password: registerUser.password,\n          });\n          console.log(response.data);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n      const addFriend = async () => {\n        try {\n          if (!user.value) {\n            throw new Error('User not logged in');\n          }\n          await axios.put(`http://localhost:8000/users/${user.value.id}/friends/${friendId.value}`);\n          alert('Friend added successfully');\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n  \n      const sendMessage = () => {\n        if(message.value.trim() !== ''){\n            console.log(message.value)\n            if (socket.instance && socket.instance.readyState === WebSocket.OPEN) {\n            console.log(message.value)\n            socket.instance.send(JSON.stringify({\n            receiver_id: friendId.value,\n            content: message.value\n          }));\n          message.value = \"\";\n        }\n        }    \n        socket.instance.onmessage = (event) => {\n            console.log(\"Message from server: \", event.data);\n            console.log(event.data)\n            \n            const message = JSON.parse(event.data);\n\n  switch (message.type) {\n    case 'status':\n      // 更新好友的在线状态\n      const friend = friends.value.find(friend => friend.id === message.content.user_id);\n      if (friend) {\n        friend.online = message.content.status === 'online';\n      }\n      break;\n    case 'text':\n      // Handle received messages as before\n      receiveMessage.value.push(event.data)\n      break;\n    default:\n      console.log(\"Unknown message type:\", message.type);\n  }\n            \n\n        };  \n        socket.instance.onclose = (event) => {\n            console.log(\"Socket closed\", event)\n  }\n      };\n  \n      return {\n        friends,\n        registerUser,\n        friendId,\n        message,\n        receiveMessage,\n        register,\n        addFriend,\n        sendMessage,\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n.section {\n  margin-bottom: 2rem;\n}\n\n.friend-item, .message-item {\n  border: 1px solid #ccc;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.status-online {\n  color: green;\n}\n\n.status-offline {\n  color: red;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}