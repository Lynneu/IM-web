{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Chat App\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Messages for User 1\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Messages for User 2\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Send Message\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.createUsers && $options.createUsers(...args))\n  }, \"Create Users\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.connectWebSocket($data.user1Id))\n  }, \"Connect User 1 WebSocket\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.connectWebSocket($data.user2Id))\n  }, \"Connect User 2 WebSocket\"), _createElementVNode(\"div\", null, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.user1Messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id\n    }, [_createElementVNode(\"p\", null, _toDisplayString(message.content), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", null, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.user2Messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id\n    }, [_createElementVNode(\"p\", null, _toDisplayString(message.content), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.messageContent = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.messageContent]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $options.sendMessage($data.user1Id, $data.user2Id, $data.messageContent))\n  }, \"Send from User 1 to User 2\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.sendMessage($data.user2Id, $data.user1Id, $data.messageContent))\n  }, \"Send from User 2 to User 1\")])]);\n}","map":{"version":3,"names":["id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","createUsers","$event","connectWebSocket","$data","user1Id","user2Id","_hoisted_3","_Fragment","_renderList","user1Messages","message","key","_toDisplayString","content","_hoisted_4","user2Messages","_hoisted_5","type","messageContent","sendMessage"],"sources":["/Users/lynneu/Documents/GitHub/im-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Chat App</h1>\n    <button @click=\"createUsers\">Create Users</button>\n    <button @click=\"connectWebSocket(user1Id)\">Connect User 1 WebSocket</button>\n    <button @click=\"connectWebSocket(user2Id)\">Connect User 2 WebSocket</button>\n    <div>\n      <h2>Messages for User 1</h2>\n      <div v-for=\"message in user1Messages\" :key=\"message.id\">\n        <p>{{message.content}}</p>\n      </div>\n    </div>\n    <div>\n      <h2>Messages for User 2</h2>\n      <div v-for=\"message in user2Messages\" :key=\"message.id\">\n        <p>{{message.content}}</p>\n      </div>\n    </div>\n    <div>\n      <h2>Send Message</h2>\n      <input type=\"text\" v-model=\"messageContent\" />\n      <button @click=\"sendMessage(user1Id, user2Id, messageContent)\">Send from User 1 to User 2</button>\n      <button @click=\"sendMessage(user2Id, user1Id, messageContent)\">Send from User 2 to User 1</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      user1Id: null,\n      user2Id: null,\n      user1Socket: null,\n      user2Socket: null,\n      user1Messages: [],\n      user2Messages: [],\n      messageContent: ''\n    };\n  },\n  methods: {\n    async createUsers() {\n      const user1Response = await axios.post('http://localhost:8000/users/', { username: 'User2' , email: 'user3@123.com', password: '123'});\n      this.user1Id = user1Response.data.id;\n\n      const user2Response = await axios.post('http://localhost:8000/users/', { name: 'User3' , email: 'user3@123.com', password: '123'});\n      this.user2Id = user2Response.data.id;\n    },\n    connectWebSocket(userId) {\n      const socket = new WebSocket(`ws://localhost:8000/ws/${userId}`);\n      \n      socket.addEventListener('message', event => {\n        const message = JSON.parse(event.data);\n        if (userId === this.user1Id) {\n          this.user1Messages.push(message);\n        } else if (userId === this.user2Id) {\n          this.user2Messages.push(message);\n        }\n      });\n      \n      if (userId === this.user1Id) {\n        this.user1Socket = socket;\n      } else if (userId === this.user2Id) {\n        this.user2Socket = socket;\n      }\n    },\n    sendMessage(senderId, receiverId, content) {\n      const message = { receiver_id: receiverId, content };\n      if (senderId === this.user1Id) {\n        this.user1Socket.send(JSON.stringify(message));\n      } else if (senderId === this.user2Id) {\n        this.user2Socket.send(JSON.stringify(message));\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;gCACXC,mBAAA,CAAiB,YAAb,UAAQ;gCAKVA,mBAAA,CAA4B,YAAxB,qBAAmB;gCAMvBA,mBAAA,CAA4B,YAAxB,qBAAmB;gCAMvBA,mBAAA,CAAqB,YAAjB,cAAY;;;uBAlBpBC,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,UAAiB,EACjBH,mBAAA,CAAkD;IAAzCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,cAAY,GACzCN,mBAAA,CAA4E;IAAnEI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAI,MAAA,IAAEF,QAAA,CAAAG,gBAAgB,CAACC,KAAA,CAAAC,OAAO;KAAG,0BAAwB,GACnEZ,mBAAA,CAA4E;IAAnEI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAI,MAAA,IAAEF,QAAA,CAAAG,gBAAgB,CAACC,KAAA,CAAAE,OAAO;KAAG,0BAAwB,GACnEb,mBAAA,CAKM,cAJJc,UAA4B,G,kBAC5Bb,mBAAA,CAEMc,SAAA,QAAAC,WAAA,CAFiBL,KAAA,CAAAM,aAAa,EAAxBC,OAAO;yBAAnBjB,mBAAA,CAEM;MAFiCkB,GAAG,EAAED,OAAO,CAACnB;QAClDC,mBAAA,CAA0B,WAAAoB,gBAAA,CAArBF,OAAO,CAACG,OAAO,iB;oCAGxBrB,mBAAA,CAKM,cAJJsB,UAA4B,G,kBAC5BrB,mBAAA,CAEMc,SAAA,QAAAC,WAAA,CAFiBL,KAAA,CAAAY,aAAa,EAAxBL,OAAO;yBAAnBjB,mBAAA,CAEM;MAFiCkB,GAAG,EAAED,OAAO,CAACnB;QAClDC,mBAAA,CAA0B,WAAAoB,gBAAA,CAArBF,OAAO,CAACG,OAAO,iB;oCAGxBrB,mBAAA,CAKM,cAJJwB,UAAqB,E,gBACrBxB,mBAAA,CAA8C;IAAvCyB,IAAI,EAAC,MAAM;+DAAUd,KAAA,CAAAe,cAAc,GAAAjB,MAAA;iDAAdE,KAAA,CAAAe,cAAc,E,GAC1C1B,mBAAA,CAAkG;IAAzFI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAI,MAAA,IAAEF,QAAA,CAAAoB,WAAW,CAAChB,KAAA,CAAAC,OAAO,EAAED,KAAA,CAAAE,OAAO,EAAEF,KAAA,CAAAe,cAAc;KAAG,4BAA0B,GACzF1B,mBAAA,CAAkG;IAAzFI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAI,MAAA,IAAEF,QAAA,CAAAoB,WAAW,CAAChB,KAAA,CAAAE,OAAO,EAAEF,KAAA,CAAAC,OAAO,EAAED,KAAA,CAAAe,cAAc;KAAG,4BAA0B,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}