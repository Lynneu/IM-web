{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Test Chat\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Register\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Send Message\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" User Registration \"), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event),\n    placeholder: \"username\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.email = $event),\n    placeholder: \"email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.password = $event),\n    placeholder: \"password\",\n    type: \"password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.register && $setup.register(...args))\n  }, \"Register\")]), _createCommentVNode(\" Send Message \"), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.friendId = $event),\n    placeholder: \"friend's ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.friendId]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.message = $event),\n    placeholder: \"message\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.message]]), _createElementVNode(\"button\", {\n    onClick: _cache[6] || (_cache[6] = (...args) => $setup.sendMessage && $setup.sendMessage(...args))\n  }, \"Send Message\")])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","$setup","username","$event","placeholder","email","password","type","onClick","_cache","args","register","_hoisted_3","friendId","message","sendMessage"],"sources":["/Users/lynneu/Documents/GitHub/im-frontend/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Test Chat</h1>\n\n    <!-- User Registration -->\n    <div>\n      <h2>Register</h2>\n      <input v-model=\"username\" placeholder=\"username\" />\n      <input v-model=\"email\" placeholder=\"email\" />\n      <input v-model=\"password\" placeholder=\"password\" type=\"password\" />\n      <button @click=\"register\">Register</button>\n    </div>\n\n    <!-- Send Message -->\n    <div>\n      <h2>Send Message</h2>\n      <input v-model=\"friendId\" placeholder=\"friend's ID\" />\n      <input v-model=\"message\" placeholder=\"message\" />\n      <button @click=\"sendMessage\">Send Message</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport axios from 'axios';\n\nexport default {\n  setup() {\n    const username = ref(\"\");\n    const email = ref(\"\");\n    const password = ref(\"\");\n    const friendId = ref(\"\");\n    const message = ref(\"\");\n    let socket = null;\n\n    const register = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/users/\", {\n          username: username.value,\n          email: email.value,\n          password: password.value,\n        });\n        console.log(response.data);\n        connectSocket(response.data.id);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const connectSocket = (userId) => {\n      socket = new WebSocket(\"ws://127.0.0.1:8010/ws/\" + userId);\n\n      socket.onopen = () => {\n        console.log(\"success!\")\n      }\n      socket.onmessage = (event) => {\n        console.log(\"Message from server: \", event.data);\n      };\n    };\n\n    const sendMessage = () => {\n      if (socket && socket.readyState === WebSocket.OPEN) {\n        socket.send(JSON.stringify({\n          receiver_id: friendId.value,\n          content: message.value\n        }));\n        message.value = \"\";\n        socket.onopen = () => {\n          console.log(\"success send!\")\n      }\n      }\n    };\n\n    return {\n      username,\n      email,\n      password,\n      friendId,\n      message,\n      register,\n      sendMessage,\n    };\n  },\n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAkB,YAAd,WAAS;gCAIXA,mBAAA,CAAiB,YAAb,UAAQ;gCASZA,mBAAA,CAAqB,YAAjB,cAAY;;;uBAdpBC,mBAAA,CAmBM,cAlBJC,UAAkB,EAElBC,mBAAA,uBAA0B,EAC1BH,mBAAA,CAMM,cALJI,UAAiB,E,gBACjBJ,mBAAA,CAAmD;+DAAnCK,MAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,MAAA,CAAAC,QAAQ,E,mBACxBN,mBAAA,CAA6C;+DAA7BK,MAAA,CAAAI,KAAK,GAAAF,MAAA;IAAEC,WAAW,EAAC;iDAAnBH,MAAA,CAAAI,KAAK,E,mBACrBT,mBAAA,CAAmE;+DAAnDK,MAAA,CAAAK,QAAQ,GAAAH,MAAA;IAAEC,WAAW,EAAC,UAAU;IAACG,IAAI,EAAC;iDAAtCN,MAAA,CAAAK,QAAQ,E,GACxBV,mBAAA,CAA2C;IAAlCY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAET,MAAA,CAAAU,QAAA,IAAAV,MAAA,CAAAU,QAAA,IAAAD,IAAA,CAAQ;KAAE,UAAQ,E,GAGpCX,mBAAA,kBAAqB,EACrBH,mBAAA,CAKM,cAJJgB,UAAqB,E,gBACrBhB,mBAAA,CAAsD;+DAAtCK,MAAA,CAAAY,QAAQ,GAAAV,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,MAAA,CAAAY,QAAQ,E,mBACxBjB,mBAAA,CAAiD;+DAAjCK,MAAA,CAAAa,OAAO,GAAAX,MAAA;IAAEC,WAAW,EAAC;iDAArBH,MAAA,CAAAa,OAAO,E,GACvBlB,mBAAA,CAAkD;IAAzCY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAET,MAAA,CAAAc,WAAA,IAAAd,MAAA,CAAAc,WAAA,IAAAL,IAAA,CAAW;KAAE,cAAY,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}