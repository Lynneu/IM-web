{"ast":null,"code":"import { ref, reactive, computed, onMounted, inject } from \"vue\";\nimport axios from 'axios';\nexport default {\n  name: 'HelloWorld',\n  setup() {\n    const friends = ref([]);\n    const socket = inject('socket');\n    const fetchFriends = async () => {\n      const userId = JSON.parse(localStorage.getItem('user')).id;\n      console.log(userId);\n      const response = await axios.get(`http://localhost:8000/users/${userId}/friends`);\n      friends.value = response.data;\n    };\n    onMounted(fetchFriends);\n    const registerUser = reactive({\n      username: '',\n      email: '',\n      password: ''\n    });\n    const friendId = ref(\"\");\n    const message = ref(\"\");\n    const receiveMessage = ref(\"\");\n    const user = computed(() => {\n      // Get user from localStorage and parse it\n      const storedUser = localStorage.getItem('user');\n      return storedUser ? JSON.parse(storedUser) : null;\n    });\n    const register = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/users/\", {\n          username: registerUser.username,\n          email: registerUser.email,\n          password: registerUser.password\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const addFriend = async () => {\n      try {\n        if (!user.value) {\n          throw new Error('User not logged in');\n        }\n        await axios.put(`http://localhost:8000/users/${user.value.id}/friends/${friendId.value}`);\n        alert('Friend added successfully');\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const sendMessage = () => {\n      if (message.value.trim() !== '') {\n        console.log(message.value);\n        if (socket.instance && socket.instance.readyState === WebSocket.OPEN) {\n          console.log(message.value);\n          socket.instance.send(JSON.stringify({\n            receiver_id: friendId.value,\n            content: message.value\n          }));\n          message.value = \"\";\n        }\n      }\n      socket.instance.onmessage = event => {\n        console.log(\"Message from server: \", event.data);\n        console.log(event.data);\n        receiveMessage.value += event.data;\n      };\n    };\n    return {\n      friends,\n      registerUser,\n      friendId,\n      message,\n      receiveMessage,\n      register,\n      addFriend,\n      sendMessage\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","inject","axios","name","setup","friends","socket","fetchFriends","userId","JSON","parse","localStorage","getItem","id","console","log","response","get","value","data","registerUser","username","email","password","friendId","message","receiveMessage","user","storedUser","register","post","error","addFriend","Error","put","alert","sendMessage","trim","instance","readyState","WebSocket","OPEN","send","stringify","receiver_id","content","onmessage","event"],"sources":["/Users/lynneu/Documents/GitHub/im-frontend/src/views/helloWorld.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Test Chat</h1>\n  \n      <!-- User Registration -->\n      <div>\n        <h2>注册</h2>\n        <input v-model=\"registerUser.username\" placeholder=\"username\" />\n        <input v-model=\"registerUser.email\" placeholder=\"email\" />\n        <input v-model=\"registerUser.password\" placeholder=\"password\" type=\"password\" />\n        <button @click=\"register\">Register</button>\n      </div>\n    \n      <!-- Add Friend -->\n      <div>\n        <h2>添加好友</h2>\n        <input v-model=\"friendId\" placeholder=\"friend's ID\" />\n        <button @click=\"addFriend\">Add Friend</button>\n      </div>\n  \n      <!-- Send Message -->\n      <div>\n        <h2>发送消息</h2>\n        <input v-model=\"friendId\" placeholder=\"friend's ID\" />\n        <input v-model=\"message\" placeholder=\"message\" />\n        <button @click=\"sendMessage\">Send Message</button>\n      </div>\n\n       <!-- 好友列表 -->\n       <div>\n        <h2>好友列表</h2>\n        <div>\n        <div v-if=\"friends.length\">\n          <router-link v-for=\"(friend, key) in friends\" :key=\"key\" :to=\"`/privatechat/${friend.id}`\">\n            <div>\n              <div>{{ friend.username }}</div>\n            </div>\n          </router-link>\n        </div>\n        <div v-else>- 当前没有好友 -</div>\n      </div>\n      </div>\n  \n       <!-- Receive Message -->\n       <div>\n        <h2>消息列表</h2>\n        <text>{{ receiveMessage }}</text>\n      </div>\n  \n    </div>\n  </template>\n  \n  <script>\n  import { ref, reactive, computed, onMounted, inject } from \"vue\";\n  import axios from 'axios';\n  \n  export default {\n    name: 'HelloWorld',\n    setup() {\n      const friends = ref([]);\n      const socket = inject('socket');\n      const fetchFriends = async () => {\n        const userId = JSON.parse(localStorage.getItem('user')).id\n        console.log(userId)\n        const response = await axios.get(`http://localhost:8000/users/${userId}/friends`)\n        friends.value = response.data\n      }\n      onMounted(fetchFriends)\n\n      const registerUser = reactive({\n        username: '',\n        email: '',\n        password: '',\n      });      \n  \n      const friendId = ref(\"\");\n      const message = ref(\"\");\n      const receiveMessage = ref(\"\")\n  \n      const user = computed(() => {\n        // Get user from localStorage and parse it\n        const storedUser = localStorage.getItem('user');\n        return storedUser ? JSON.parse(storedUser) : null;\n      });\n  \n      const register = async () => {\n        try {\n          const response = await axios.post(\"http://localhost:8000/users/\", {\n            username: registerUser.username,\n            email: registerUser.email,\n            password: registerUser.password,\n          });\n          console.log(response.data);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n      const addFriend = async () => {\n        try {\n          if (!user.value) {\n            throw new Error('User not logged in');\n          }\n          await axios.put(`http://localhost:8000/users/${user.value.id}/friends/${friendId.value}`);\n          alert('Friend added successfully');\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n  \n      const sendMessage = () => {\n        if(message.value.trim() !== ''){\n            console.log(message.value)\n            if (socket.instance && socket.instance.readyState === WebSocket.OPEN) {\n            console.log(message.value)\n            socket.instance.send(JSON.stringify({\n            receiver_id: friendId.value,\n            content: message.value\n          }));\n          message.value = \"\";\n        }\n        }    \n        socket.instance.onmessage = (event) => {\n            console.log(\"Message from server: \", event.data);\n            console.log(event.data)\n            receiveMessage.value += event.data\n        };  \n      };\n  \n      return {\n        friends,\n        registerUser,\n        friendId,\n        message,\n        receiveMessage,\n        register,\n        addFriend,\n        sendMessage,\n      };\n    },\n  };\n  </script>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}