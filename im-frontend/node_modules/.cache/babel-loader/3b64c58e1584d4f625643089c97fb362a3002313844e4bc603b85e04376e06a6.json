{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0fa23b7a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Test Chat\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"section\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add Friend\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"section\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Send Message\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"section\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Friends List\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"status-online\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"status-offline\"\n};\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = {\n  class: \"section\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Message List\", -1 /* HOISTED */));\nconst _hoisted_14 = {\n  key: 0\n};\nconst _hoisted_15 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" Add Friend \"), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.friendId = $event),\n    placeholder: \"friend's ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.friendId]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.addFriend && $setup.addFriend(...args))\n  }, \"Add Friend\")]), _createCommentVNode(\" Send Message \"), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.friendId = $event),\n    placeholder: \"friend's ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.friendId]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.message = $event),\n    placeholder: \"message\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.message]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.sendMessage && $setup.sendMessage(...args))\n  }, \"Send Message\")]), _createCommentVNode(\" Friends List \"), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, $setup.friends.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.friends, (friend, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: key,\n      class: \"friend-item\"\n    }, [_createVNode(_component_router_link, {\n      to: `/privatechat/${friend.id}`\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createTextVNode(_toDisplayString(friend.username) + \" \", 1 /* TEXT */), friend.online == true ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, \"[Online]\")) : _createCommentVNode(\"v-if\", true), friend.online == false ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, \"[Offline]\")) : _createCommentVNode(\"v-if\", true)])]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"- No Friends -\"))]), _createCommentVNode(\" Receive Message \"), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, $setup.receiveMessage.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.receiveMessage, (msg, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: key,\n      class: \"message-item\"\n    }, _toDisplayString(msg), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_15, \"- No Messages -\"))])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","$setup","friendId","$event","placeholder","onClick","_cache","args","addFriend","_hoisted_4","_hoisted_5","message","sendMessage","_hoisted_6","_hoisted_7","friends","length","_hoisted_8","_Fragment","_renderList","friend","key","_createVNode","_component_router_link","to","id","username","online","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","receiveMessage","_hoisted_14","msg","_hoisted_15"],"sources":["/Users/lynneu/Documents/GitHub/im-frontend/src/views/helloWorld.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Test Chat</h1>\n    \n      <!-- Add Friend -->\n      <div class=\"section\">\n        <h2>Add Friend</h2>\n        <input v-model=\"friendId\" placeholder=\"friend's ID\" />\n        <button @click=\"addFriend\">Add Friend</button>\n      </div>\n  \n      <!-- Send Message -->\n      <div class=\"section\">\n        <h2>Send Message</h2>\n        <input v-model=\"friendId\" placeholder=\"friend's ID\" />\n        <input v-model=\"message\" placeholder=\"message\" />\n        <button @click=\"sendMessage\">Send Message</button>\n      </div>\n  \n       <!-- Friends List -->\n       <div class=\"section\">\n        <h2>Friends List</h2>\n        <div v-if=\"friends.length\">\n          <div v-for=\"(friend, key) in friends\" :key=\"key\" class=\"friend-item\">\n            <router-link :to=\"`/privatechat/${friend.id}`\">\n            <div>\n              {{ friend.username }}\n              <span v-if=\"friend.online == true\" class=\"status-online\">[Online]</span>\n              <span v-if=\"friend.online == false\" class=\"status-offline\">[Offline]</span>\n            </div>\n        </router-link>\n          </div>\n        </div>\n        <div v-else>- No Friends -</div>\n      </div>\n  \n       <!-- Receive Message -->\n       <div class=\"section\">\n        <h2>Message List</h2>\n        <div v-if=\"receiveMessage.length\">\n          <div v-for=\"(msg, key) in receiveMessage\" :key=\"key\" class=\"message-item\">\n            {{ msg }}\n          </div>\n        </div>\n        <div v-else>- No Messages -</div>\n      </div>\n    </div>\n</template>\n\n  \n  <script>\n  import { ref, reactive, computed, onMounted, inject } from \"vue\";\n  import axios from 'axios';\n  \n  export default {\n    name: 'HelloWorld',\n    setup() {\n      const friends = ref([]);\n      const socket = inject('socket');\n      const fetchFriends = async () => {\n        const userId = JSON.parse(localStorage.getItem('user')).id\n        console.log(userId)\n        const response = await axios.get(`http://localhost:8000/users/${userId}/friends`)\n        friends.value = response.data\n      }\n      onMounted(async () => {\n  await fetchFriends();\n\n  // Set up WebSocket listeners\n  if (socket.instance) {\n    socket.instance.onmessage = (event) => {\n      console.log(\"Message from server: \", event.data);\n      const message = JSON.parse(event.data);\n\n      switch (message.type) {\n        case 'status': {\n          // 更新好友的在线状态\n          const friend = friends.value.find(friend => friend.id === message.content.user_id);\n          if (friend) {\n            friend.online = message.content.status === 'online';\n          }\n          break;\n        }\n        case 'text':\n          // Handle received messages as before\n          receiveMessage.value.push(event.data)\n          break;\n        default:\n          console.log(\"Unknown message type:\", message.type);\n      }\n    };\n\n    socket.instance.onclose = (event) => {\n      console.log(\"Socket closed\", event);\n    };\n  }\n});\n\n      const registerUser = reactive({\n        username: '',\n        email: '',\n        password: '',\n      });      \n  \n      const friendId = ref(\"\");\n      const message = ref(\"\");\n      const receiveMessage = ref([])\n  \n      const user = computed(() => {\n        // Get user from localStorage and parse it\n        const storedUser = localStorage.getItem('user');\n        return storedUser ? JSON.parse(storedUser) : null;\n      });\n  \n      const register = async () => {\n        try {\n          const response = await axios.post(\"http://localhost:8000/users/\", {\n            username: registerUser.username,\n            email: registerUser.email,\n            password: registerUser.password,\n          });\n          console.log(response.data);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n      const addFriend = async () => {\n        try {\n          if (!user.value) {\n            throw new Error('User not logged in');\n          }\n          await axios.put(`http://localhost:8000/users/${user.value.id}/friends/${friendId.value}`);\n          alert('Friend added successfully');\n          await fetchFriends(); \n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n  \n      const sendMessage = () => {\n        if (message.value.trim() !== '' && socket.instance && socket.instance.readyState === WebSocket.OPEN) {\n            console.log(message.value);\n            socket.instance.send(JSON.stringify({\n            receiver_id: friendId.value,\n            content: message.value\n            }));\n            message.value = \"\";\n        }\n};\n  \n      return {\n        friends,\n        registerUser,\n        friendId,\n        message,\n        receiveMessage,\n        register,\n        addFriend,\n        sendMessage,\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n.section {\n  margin-bottom: 2rem;\n}\n\n.friend-item, .message-item {\n  border: 1px solid #ccc;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.status-online {\n  color: green;\n}\n\n.status-offline {\n  color: red;\n}\n</style>"],"mappings":";;gEAEMA,mBAAA,CAAkB,YAAd,WAAS;;EAGRC,KAAK,EAAC;AAAS;gEAClBD,mBAAA,CAAmB,YAAf,YAAU;;EAMXC,KAAK,EAAC;AAAS;gEAClBD,mBAAA,CAAqB,YAAjB,cAAY;;EAOZC,KAAK,EAAC;AAAS;gEACnBD,mBAAA,CAAqB,YAAjB,cAAY;;;;;;EAMyBC,KAAK,EAAC;;;;EACLA,KAAK,EAAC;;;;;;EAS5CA,KAAK,EAAC;AAAS;iEACnBD,mBAAA,CAAqB,YAAjB,cAAY;;;;;;;;;uBArCpBE,mBAAA,CA6CM,cA5CJC,UAAkB,EAElBC,mBAAA,gBAAmB,EACnBJ,mBAAA,CAIM,OAJNK,UAIM,GAHJC,UAAmB,E,gBACnBN,mBAAA,CAAsD;+DAAtCO,MAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,MAAA,CAAAC,QAAQ,E,GACxBR,mBAAA,CAA8C;IAArCW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAO,SAAA,IAAAP,MAAA,CAAAO,SAAA,IAAAD,IAAA,CAAS;KAAE,YAAU,E,GAGvCT,mBAAA,kBAAqB,EACrBJ,mBAAA,CAKM,OALNe,UAKM,GAJJC,UAAqB,E,gBACrBhB,mBAAA,CAAsD;+DAAtCO,MAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,MAAA,CAAAC,QAAQ,E,mBACxBR,mBAAA,CAAiD;+DAAjCO,MAAA,CAAAU,OAAO,GAAAR,MAAA;IAAEC,WAAW,EAAC;iDAArBH,MAAA,CAAAU,OAAO,E,GACvBjB,mBAAA,CAAkD;IAAzCW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAW,WAAA,IAAAX,MAAA,CAAAW,WAAA,IAAAL,IAAA,CAAW;KAAE,cAAY,E,GAG1CT,mBAAA,kBAAqB,EACrBJ,mBAAA,CAcK,OAdLmB,UAcK,GAbJC,UAAqB,EACVb,MAAA,CAAAc,OAAO,CAACC,MAAM,I,cAAzBpB,mBAAA,CAUM,OAAAqB,UAAA,I,kBATJrB,mBAAA,CAQMsB,SAAA,QAAAC,WAAA,CARuBlB,MAAA,CAAAc,OAAO,GAAvBK,MAAM,EAAEC,GAAG;yBAAxBzB,mBAAA,CAQM;MARiCyB,GAAG,EAAEA,GAAG;MAAE1B,KAAK,EAAC;QACrD2B,YAAA,CAMUC,sBAAA;MANIC,EAAE,kBAAkBJ,MAAM,CAACK,EAAE;;wBAC3C,MAIM,CAJN/B,mBAAA,CAIM,c,kCAHD0B,MAAM,CAACM,QAAQ,IAAG,GACrB,iBAAYN,MAAM,CAACO,MAAM,Y,cAAzB/B,mBAAA,CAAwE,QAAxEgC,UAAwE,EAAf,UAAQ,K,mCACrDR,MAAM,CAACO,MAAM,a,cAAzB/B,mBAAA,CAA2E,QAA3EiC,WAA2E,EAAhB,WAAS,K;;;qDAK1EjC,mBAAA,CAAgC,OAAAkC,WAAA,EAApB,gBAAc,G,GAG3BhC,mBAAA,qBAAwB,EACxBJ,mBAAA,CAQK,OARLqC,WAQK,GAPJC,WAAqB,EACV/B,MAAA,CAAAgC,cAAc,CAACjB,MAAM,I,cAAhCpB,mBAAA,CAIM,OAAAsC,WAAA,I,kBAHJtC,mBAAA,CAEMsB,SAAA,QAAAC,WAAA,CAFoBlB,MAAA,CAAAgC,cAAc,GAA3BE,GAAG,EAAEd,GAAG;yBAArBzB,mBAAA,CAEM;MAFqCyB,GAAG,EAAEA,GAAG;MAAE1B,KAAK,EAAC;wBACtDwC,GAAG;qDAGVvC,mBAAA,CAAiC,OAAAwC,WAAA,EAArB,iBAAe,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}