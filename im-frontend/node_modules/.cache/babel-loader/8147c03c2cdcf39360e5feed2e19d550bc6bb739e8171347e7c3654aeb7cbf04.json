{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0fa23b7a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Test Chat\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"好友列表\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_header = _resolveComponent(\"el-header\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_list_item = _resolveComponent(\"el-list-item\");\n  const _component_el_list = _resolveComponent(\"el-list\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  return _openBlock(), _createBlock(_component_el_container, null, {\n    default: _withCtx(() => [_createVNode(_component_el_header, null, {\n      default: _withCtx(() => [_createVNode(_component_el_row, {\n        type: \"flex\",\n        justify: \"space-between\",\n        align: \"middle\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 6\n        }, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_col, {\n          span: 6,\n          class: \"text-right\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_router_link, {\n            to: {\n              name: 'userProfile'\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.user.username), 1 /* TEXT */)]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_main, null, {\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        onSubmit: _withModifiers($setup.addFriend, [\"prevent\"])\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 16\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_form_item, {\n              label: \"Friend's ID\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_input, {\n                modelValue: $setup.friendId,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.friendId = $event),\n                placeholder: \"friend's ID\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 8\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              \"native-type\": \"submit\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Add Friend\")]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onSubmit\"]), _createVNode(_component_el_list, null, {\n        default: _withCtx(() => [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.friends, (friend, key) => {\n          return _openBlock(), _createBlock(_component_el_list_item, {\n            key: key\n          }, {\n            default: _withCtx(() => [_createVNode(_component_router_link, {\n              to: {\n                name: 'privatechat',\n                params: {\n                  friendId: friend.id,\n                  friendName: friend.username\n                }\n              }\n            }, {\n              default: _withCtx(() => [_createElementVNode(\"div\", null, [_createTextVNode(_toDisplayString(friend.username) + \" \", 1 /* TEXT */), friend.online == true ? (_openBlock(), _createBlock(_component_el_tag, {\n                key: 0,\n                type: \"success\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"在线\")]),\n                _: 1 /* STABLE */\n              })) : _createCommentVNode(\"v-if\", true), friend.online == false ? (_openBlock(), _createBlock(_component_el_tag, {\n                key: 1,\n                type: \"info\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"离线\")]),\n                _: 1 /* STABLE */\n              })) : _createCommentVNode(\"v-if\", true)])]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","_createBlock","_component_el_container","_createVNode","_component_el_header","_component_el_row","type","justify","align","_component_el_col","span","_hoisted_1","class","_component_router_link","to","name","$setup","user","username","_component_el_main","_component_el_form","onSubmit","_withModifiers","addFriend","_component_el_form_item","label","_component_el_input","friendId","$event","placeholder","_component_el_button","_component_el_list","_hoisted_2","_createElementBlock","_Fragment","_renderList","friends","friend","key","_component_el_list_item","id","online","_component_el_tag"],"sources":["/Users/lynneu/Documents/GitHub/IM-web/im-frontend/src/views/helloWorld.vue"],"sourcesContent":["<template>\n  <el-container>\n    <el-header>\n      <el-row type=\"flex\" justify=\"space-between\" align=\"middle\">\n        <el-col :span=\"6\">\n          <h2>Test Chat</h2>\n        </el-col>\n        <el-col :span=\"6\" class=\"text-right\">\n          <router-link :to=\"{ name: 'userProfile' }\">{{ user.username }}</router-link>\n        </el-col>\n      </el-row>\n    </el-header>\n    <el-main>\n      <el-form @submit.native.prevent=\"addFriend\">\n        <el-row>\n          <el-col :span=\"16\">\n            <el-form-item label=\"Friend's ID\">\n              <el-input v-model=\"friendId\" placeholder=\"friend's ID\"></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-button type=\"primary\" native-type=\"submit\">Add Friend</el-button>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-list>\n        <h2>好友列表</h2>\n        <el-list-item v-for=\"(friend, key) in friends\" :key=\"key\">\n          <router-link \n            :to=\"{\n              name: 'privatechat', \n              params: { \n                friendId: friend.id,\n                friendName: friend.username \n              }\n            }\"\n          >\n            <div>\n              {{ friend.username }}\n              <el-tag v-if=\"friend.online == true\" type=\"success\">在线</el-tag>\n              <el-tag v-if=\"friend.online == false\" type=\"info\">离线</el-tag>\n            </div>\n          </router-link>\n        </el-list-item>\n      </el-list>\n    </el-main>\n  </el-container>\n</template>\n\n\n\n  \n<script>\nimport { ref, reactive, computed, onMounted } from \"vue\";\nimport axios from 'axios';\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'HelloWorld',\n  setup() {\n    const store = useStore()\n    const user = computed(() => store.state.user)  // get user from store\n    const socket = computed(() => store.state.websocket) // get websocket from store\n    const friends = ref([]);\n    const registerUser = reactive({\n      username: '',\n      email: '',\n      password: '',\n    });  \n    const friendId = ref(\"\");\n    const message = ref(\"\");\n    const receiveMessage = ref([])\n\n    const fetchFriends = async () => {\n      const userId = user.value.id\n      console.log('yes')\n      console.log(user.value)\n      console.log(userId)\n      const response = await axios.get(`http://localhost:8000/users/${userId}/friends`)\n      friends.value = response.data\n    }\n    \n    onMounted(async () => {\n      await fetchFriends();\n      if (socket.value) {\n        socket.value.onmessage = (event) => {\n          console.log(\"Message from server: \", event.data);\n          const message = JSON.parse(event.data);\n\n          switch (message.type) {\n            case 'status': {\n              // 更新好友的在线状态\n              const friend = friends.value.find(friend => friend.id === message.content.user_id);\n              if (friend) {\n                friend.online = message.content.status === 'online';\n              }\n              break;\n            }\n            case 'text':\n              // Handle received messages as before\n              receiveMessage.value.push(event.data)\n              break;\n            default:\n              console.log(\"Unknown message type:\", message.type);\n          }\n        };\n  \n        socket.value.onclose = (event) => {\n          console.log(\"Socket closed\", event);\n        };\n      }\n    });\n\n    const register = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/users/\", {\n          username: registerUser.username,\n          email: registerUser.email,\n          password: registerUser.password,\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const addFriend = async () => {\n      try {\n        if (!user.value) {\n          throw new Error('User not logged in');\n        }\n        await axios.put(`http://localhost:8000/users/${user.value.id}/friends/${friendId.value}`);\n        alert('Friend added successfully');\n        await fetchFriends(); \n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const sendMessage = () => {\n      if (message.value.trim() !== '' && socket.value && socket.value.readyState === WebSocket.OPEN) {\n        console.log(message.value);\n        socket.value.send(JSON.stringify({\n          receiver_id: friendId.value,\n          content: message.value\n        }));\n        message.value = \"\";\n      }\n    };\n\n    return {\n      friends,\n      registerUser,\n      friendId,\n      message,\n      receiveMessage,\n      user,  // return user\n      socket, // return websocket\n      register,\n      addFriend,\n      sendMessage,\n    };\n  },\n};\n</script>\n\n  \n  <style scoped>\n.section {\n  margin-bottom: 2rem;\n}\n\n.friend-item, .message-item {\n  border: 1px solid #ccc;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.status-online {\n  color: green;\n}\n\n.status-offline {\n  color: red;\n}\n</style>"],"mappings":";;gEAKUA,mBAAA,CAAkB,YAAd,WAAS;gEAqBfA,mBAAA,CAAa,YAAT,MAAI;;;;;;;;;;;;;;;;uBAzBdC,YAAA,CA6CeC,uBAAA;sBA5Cb,MASY,CATZC,YAAA,CASYC,oBAAA;wBARV,MAOS,CAPTD,YAAA,CAOSE,iBAAA;QAPDC,IAAI,EAAC,MAAM;QAACC,OAAO,EAAC,eAAe;QAACC,KAAK,EAAC;;0BAChD,MAES,CAFTL,YAAA,CAESM,iBAAA;UAFAC,IAAI,EAAE;QAAC;4BACd,MAAkB,CAAlBC,UAAkB,C;;YAEpBR,YAAA,CAESM,iBAAA;UAFAC,IAAI,EAAE,CAAC;UAAEE,KAAK,EAAC;;4BACtB,MAA4E,CAA5ET,YAAA,CAA4EU,sBAAA;YAA9DC,EAAE,EAAE;cAAAC,IAAA;YAAA;UAAuB;8BAAE,MAAmB,C,kCAAhBC,MAAA,CAAAC,IAAI,CAACC,QAAQ,iB;;;;;;;;;;;;QAIjEf,YAAA,CAiCUgB,kBAAA;wBAhCR,MAWU,CAXVhB,YAAA,CAWUiB,kBAAA;QAXAC,QAAM,EAAAC,cAAA,CAAiBN,MAAA,CAAAO,SAAS;;0BACxC,MASS,CATTpB,YAAA,CASSE,iBAAA;4BARP,MAIS,CAJTF,YAAA,CAISM,iBAAA;YAJAC,IAAI,EAAE;UAAE;8BACf,MAEe,CAFfP,YAAA,CAEeqB,uBAAA;cAFDC,KAAK,EAAC;YAAa;gCAC/B,MAAkE,CAAlEtB,YAAA,CAAkEuB,mBAAA;4BAA/CV,MAAA,CAAAW,QAAQ;2EAARX,MAAA,CAAAW,QAAQ,GAAAC,MAAA;gBAAEC,WAAW,EAAC;;;;;;cAG7C1B,YAAA,CAESM,iBAAA;YAFAC,IAAI,EAAE;UAAC;8BACd,MAAqE,CAArEP,YAAA,CAAqE2B,oBAAA;cAA1DxB,IAAI,EAAC,SAAS;cAAC,aAAW,EAAC;;gCAAS,MAAU,C,iBAAV,YAAU,E;;;;;;;;;;;uCAI/DH,YAAA,CAmBU4B,kBAAA;0BAlBR,MAAa,CAAbC,UAAa,G,kBACbC,mBAAA,CAgBeC,SAAA,QAAAC,WAAA,CAhBuBnB,MAAA,CAAAoB,OAAO,GAAvBC,MAAM,EAAEC,GAAG;+BAAjCrC,YAAA,CAgBesC,uBAAA;YAhBiCD,GAAG,EAAEA;UAAG;8BACtD,MAcc,CAddnC,YAAA,CAccU,sBAAA;cAbXC,EAAE;;;4BAA2FuB,MAAM,CAACG,EAAE;8BAA8BH,MAAM,CAACnB;;;;gCAQ5I,MAIM,CAJNlB,mBAAA,CAIM,c,kCAHDqC,MAAM,CAACnB,QAAQ,IAAG,GACrB,iBAAcmB,MAAM,CAACI,MAAM,Y,cAA3BxC,YAAA,CAA+DyC,iBAAA;;gBAA1BpC,IAAI,EAAC;;kCAAU,MAAE,C,iBAAF,IAAE,E;;uDACxC+B,MAAM,CAACI,MAAM,a,cAA3BxC,YAAA,CAA6DyC,iBAAA;;gBAAvBpC,IAAI,EAAC;;kCAAO,MAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}