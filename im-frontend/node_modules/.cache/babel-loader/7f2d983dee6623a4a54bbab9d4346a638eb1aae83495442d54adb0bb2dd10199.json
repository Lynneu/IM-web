{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-06fcf0b3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"个人信息\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"用户名: \", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"邮箱: \", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"修改个人信息\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n    onClick: $setup.backToPreviousPage,\n    class: \"back-btn\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"返回\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), !$setup.isEditing ? (_openBlock(), _createBlock(_component_el_card, {\n    key: 0,\n    class: \"box-card\"\n  }, {\n    header: _withCtx(() => [_hoisted_2]),\n    default: _withCtx(() => [_createElementVNode(\"p\", null, [_hoisted_3, _createTextVNode(_toDisplayString($setup.form.username), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_hoisted_4, _createTextVNode(_toDisplayString($setup.form.email), 1 /* TEXT */)]), _createVNode(_component_el_button, {\n      onClick: $setup.startEditing,\n      type: \"primary\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"修改\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })) : (_openBlock(), _createBlock(_component_el_card, {\n    key: 1,\n    class: \"box-card\"\n  }, {\n    header: _withCtx(() => [_hoisted_5]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      ref: \"form\",\n      model: $setup.form,\n      \"label-width\": \"120px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"用户名\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.username,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.username = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"密码\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.form.password = $event),\n          type: \"password\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"邮箱\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.email,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.form.email = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: _cache[3] || (_cache[3] = $event => $setup.submitForm('form'))\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"提交\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])]),\n    _: 1 /* STABLE */\n  }))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_el_button","onClick","$setup","backToPreviousPage","isEditing","_createBlock","_component_el_card","header","_withCtx","_hoisted_2","_hoisted_3","form","username","_hoisted_4","email","startEditing","type","_hoisted_5","_component_el_form","ref","model","_component_el_form_item","label","_component_el_input","$event","password","_cache","submitForm"],"sources":["/Users/lynneu/Documents/GitHub/IM-web/im-frontend/src/views/userInfo.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <el-button @click=\"backToPreviousPage\" class=\"back-btn\">返回</el-button>\n      <el-card class=\"box-card\" v-if=\"!isEditing\">\n        <template v-slot:header>\n          <span>个人信息</span>\n        </template>\n        <p><strong>用户名: </strong>{{ form.username }}</p>\n        <p><strong>邮箱: </strong>{{ form.email }}</p>\n        <el-button @click=\"startEditing\" type=\"primary\">修改</el-button>\n      </el-card>\n      <el-card class=\"box-card\" v-else>\n        <template v-slot:header>\n          <span>修改个人信息</span>\n        </template>\n        <el-form ref=\"form\" :model=\"form\" label-width=\"120px\">\n          <el-form-item label=\"用户名\">\n            <el-input v-model=\"form.username\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"密码\">\n            <el-input v-model=\"form.password\" type=\"password\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"邮箱\">\n            <el-input v-model=\"form.email\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"submitForm('form')\">提交</el-button>\n          </el-form-item>\n        </el-form>\n      </el-card>\n    </div>\n  </template>\n  \n  \n  <script>\n  import { ref } from 'vue';\n  import { useStore } from 'vuex';\n  import { ElMessage } from 'element-plus';\n  \n  export default {\n    name: 'userInfo',\n    setup() {\n      const store = useStore();\n      const form = ref({\n        username: store.state.user.username,\n        password: '',\n        email: store.state.user.email,\n      });\n      const isEditing = ref(false);\n      const backToPreviousPage = () => {\n        // TODO: 返回上一界面的逻辑\n      };\n  \n      const startEditing = () => {\n        isEditing.value = true;\n      };\n  \n      const submitForm = async () => {\n                // 创建一个新的对象，只包含用户修改的字段\n        const updatedFields = Object.entries(form.value).reduce((obj, [key, value]) => {\n            // 如果用户已经输入了新的值，那么添加这个字段到新的对象中\n            if (value) {\n            obj[key] = value;\n            }\n            return obj;\n        }, {});\n\n        // 确保至少有一个字段被修改\n        if (!Object.keys(updatedFields).length) {\n            ElMessage.error('请至少修改一个字段');\n            return;\n        }\n\n        // TODO: 调用后端的更新用户接口，传递formData，并处理返回的数据\n        try {\n            const response = await fetch(`http://localhost:8000/users/${store.state.user.id}`, {\n                method: 'PUT',\n                headers: {\n                'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(updatedFields),\n            });\n            if (!response.ok) throw new Error('Network response was not ok');\n            const result = await response.json();\n            \n            // 使用返回的状态码来判断请求是否成功\n            if (response.status === 200) {\n                ElMessage.success('个人信息修改成功');\n                // 使用返回的数据来更新 Vuex 状态\n                store.commit('updateUser', result);\n            } else {\n                ElMessage.error('个人信息修改失败');\n            }\n            } catch (error) {\n            console.error('Error:', error);\n            ElMessage.error('服务器出现问题，请稍后再试');\n            } finally {\n            isEditing.value = false;\n            }\n\n      };\n  \n      return { backToPreviousPage, form, submitForm, isEditing, startEditing };\n    },\n  };\n  </script>\n\n\n<style scoped>\n.container {\n  padding: 50px;\n}\n\n.box-card {\n  margin-bottom: 20px;\n}\n\n.back-btn {\n  margin-bottom: 20px;\n}\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAW;gEAIhBC,mBAAA,CAAiB,cAAX,MAAI;gEAETA,mBAAA,CAAsB,gBAAd,OAAK;gEACbA,mBAAA,CAAqB,gBAAb,MAAI;gEAKbA,mBAAA,CAAmB,cAAb,QAAM;;;;;;;;uBAZlBC,mBAAA,CA6BM,OA7BNC,UA6BM,GA5BJC,YAAA,CAAsEC,oBAAA;IAA1DC,OAAK,EAAEC,MAAA,CAAAC,kBAAkB;IAAER,KAAK,EAAC;;sBAAW,MAAE,C,iBAAF,IAAE,E;;mCACzBO,MAAA,CAAAE,SAAS,I,cAA1CC,YAAA,CAOUC,kBAAA;;IAPDX,KAAK,EAAC;;IACIY,MAAM,EAAAC,QAAA,CACrB,MAAiB,CAAjBC,UAAiB,C;sBAEnB,MAAgD,CAAhDb,mBAAA,CAAgD,YAA7Cc,UAAsB,E,kCAAGR,MAAA,CAAAS,IAAI,CAACC,QAAQ,iB,GACzChB,mBAAA,CAA4C,YAAzCiB,UAAqB,E,kCAAGX,MAAA,CAAAS,IAAI,CAACG,KAAK,iB,GACrCf,YAAA,CAA8DC,oBAAA;MAAlDC,OAAK,EAAEC,MAAA,CAAAa,YAAY;MAAEC,IAAI,EAAC;;wBAAU,MAAE,C,iBAAF,IAAE,E;;;;uBAEpDX,YAAA,CAkBUC,kBAAA;;IAlBDX,KAAK,EAAC;;IACIY,MAAM,EAAAC,QAAA,CACrB,MAAmB,CAAnBS,UAAmB,C;sBAErB,MAaU,CAbVlB,YAAA,CAaUmB,kBAAA;MAbDC,GAAG,EAAC,MAAM;MAAEC,KAAK,EAAElB,MAAA,CAAAS,IAAI;MAAE,aAAW,EAAC;;wBAC5C,MAEe,CAFfZ,YAAA,CAEesB,uBAAA;QAFDC,KAAK,EAAC;MAAK;0BACvB,MAA6C,CAA7CvB,YAAA,CAA6CwB,mBAAA;sBAA1BrB,MAAA,CAAAS,IAAI,CAACC,QAAQ;qEAAbV,MAAA,CAAAS,IAAI,CAACC,QAAQ,GAAAY,MAAA;;;UAElCzB,YAAA,CAEesB,uBAAA;QAFDC,KAAK,EAAC;MAAI;0BACtB,MAA6D,CAA7DvB,YAAA,CAA6DwB,mBAAA;sBAA1CrB,MAAA,CAAAS,IAAI,CAACc,QAAQ;qEAAbvB,MAAA,CAAAS,IAAI,CAACc,QAAQ,GAAAD,MAAA;UAAER,IAAI,EAAC;;;UAEzCjB,YAAA,CAEesB,uBAAA;QAFDC,KAAK,EAAC;MAAI;0BACtB,MAA0C,CAA1CvB,YAAA,CAA0CwB,mBAAA;sBAAvBrB,MAAA,CAAAS,IAAI,CAACG,KAAK;qEAAVZ,MAAA,CAAAS,IAAI,CAACG,KAAK,GAAAU,MAAA;;;UAE/BzB,YAAA,CAEesB,uBAAA;0BADb,MAAoE,CAApEtB,YAAA,CAAoEC,oBAAA;UAAzDgB,IAAI,EAAC,SAAS;UAAEf,OAAK,EAAAyB,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEtB,MAAA,CAAAyB,UAAU;;4BAAU,MAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}