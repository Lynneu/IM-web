{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0fa23b7a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Test Chat\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"section\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"添加好友\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"section\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"好友列表\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"status-online\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"status-offline\"\n};\nconst _hoisted_9 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" Add Friend \"), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.friendId = $event),\n    placeholder: \"friend's ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.friendId]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.addFriend && $setup.addFriend(...args))\n  }, \"Add Friend\")]), _createCommentVNode(\" Friends List \"), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, $setup.friends.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.friends, (friend, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: key,\n      class: \"friend-item\"\n    }, [_createVNode(_component_router_link, {\n      to: `/privatechat/${friend.id}`\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createTextVNode(_toDisplayString(friend.username) + \" \", 1 /* TEXT */), friend.online == true ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"[在线]\")) : _createCommentVNode(\"v-if\", true), friend.online == false ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"[离线]\")) : _createCommentVNode(\"v-if\", true)])]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"- No Friends -\"))])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","$setup","friendId","$event","placeholder","onClick","_cache","args","addFriend","_hoisted_4","_hoisted_5","friends","length","_hoisted_6","_Fragment","_renderList","friend","key","_createVNode","_component_router_link","to","id","username","online","_hoisted_7","_hoisted_8","_hoisted_9"],"sources":["/Users/lynneu/Documents/GitHub/im-frontend/src/views/helloWorld.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Test Chat</h1>\n    \n      <!-- Add Friend -->\n      <div class=\"section\">\n        <h2>添加好友</h2>\n        <input v-model=\"friendId\" placeholder=\"friend's ID\" />\n        <button @click=\"addFriend\">Add Friend</button>\n      </div>\n  \n       <!-- Friends List -->\n       <div class=\"section\">\n        <h2>好友列表</h2>\n        <div v-if=\"friends.length\">\n          <div v-for=\"(friend, key) in friends\" :key=\"key\" class=\"friend-item\">\n            <router-link :to=\"`/privatechat/${friend.id}`\">\n            <div>\n              {{ friend.username }}\n              <span v-if=\"friend.online == true\" class=\"status-online\">[在线]</span>\n              <span v-if=\"friend.online == false\" class=\"status-offline\">[离线]</span>\n            </div>\n        </router-link>\n          </div>\n        </div>\n        <div v-else>- No Friends -</div>\n      </div>\n  \n    </div>\n</template>\n\n  \n<script>\nimport { ref, reactive, computed, onMounted } from \"vue\";\nimport axios from 'axios';\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'HelloWorld',\n  setup() {\n    const store = useStore()\n    const user = computed(() => store.state.user)  // get user from store\n    const socket = computed(() => store.state.websocket) // get websocket from store\n    const friends = ref([]);\n    const registerUser = reactive({\n      username: '',\n      email: '',\n      password: '',\n    });  \n    const friendId = ref(\"\");\n    const message = ref(\"\");\n    const receiveMessage = ref([])\n\n    const fetchFriends = async () => {\n      const userId = user.value.id\n      console.log('yes')\n      console.log(user.value)\n      console.log(userId)\n      const response = await axios.get(`http://localhost:8000/users/${userId}/friends`)\n      friends.value = response.data\n    }\n    \n    onMounted(async () => {\n      await fetchFriends();\n      if (socket.value) {\n        socket.value.onmessage = (event) => {\n          console.log(\"Message from server: \", event.data);\n          const message = JSON.parse(event.data);\n\n          switch (message.type) {\n            case 'status': {\n              // 更新好友的在线状态\n              const friend = friends.value.find(friend => friend.id === message.content.user_id);\n              if (friend) {\n                friend.online = message.content.status === 'online';\n              }\n              break;\n            }\n            case 'text':\n              // Handle received messages as before\n              receiveMessage.value.push(event.data)\n              break;\n            default:\n              console.log(\"Unknown message type:\", message.type);\n          }\n        };\n  \n        socket.value.onclose = (event) => {\n          console.log(\"Socket closed\", event);\n        };\n      }\n    });\n\n    const register = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/users/\", {\n          username: registerUser.username,\n          email: registerUser.email,\n          password: registerUser.password,\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const addFriend = async () => {\n      try {\n        if (!user.value) {\n          throw new Error('User not logged in');\n        }\n        await axios.put(`http://localhost:8000/users/${user.value.id}/friends/${friendId.value}`);\n        alert('Friend added successfully');\n        await fetchFriends(); \n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const sendMessage = () => {\n      if (message.value.trim() !== '' && socket.value && socket.value.readyState === WebSocket.OPEN) {\n        console.log(message.value);\n        socket.value.send(JSON.stringify({\n          receiver_id: friendId.value,\n          content: message.value\n        }));\n        message.value = \"\";\n      }\n    };\n\n    return {\n      friends,\n      registerUser,\n      friendId,\n      message,\n      receiveMessage,\n      user,  // return user\n      socket, // return websocket\n      register,\n      addFriend,\n      sendMessage,\n    };\n  },\n};\n</script>\n\n  \n  <style scoped>\n.section {\n  margin-bottom: 2rem;\n}\n\n.friend-item, .message-item {\n  border: 1px solid #ccc;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.status-online {\n  color: green;\n}\n\n.status-offline {\n  color: red;\n}\n</style>"],"mappings":";;gEAEMA,mBAAA,CAAkB,YAAd,WAAS;;EAGRC,KAAK,EAAC;AAAS;gEAClBD,mBAAA,CAAa,YAAT,MAAI;;EAMJC,KAAK,EAAC;AAAS;gEACnBD,mBAAA,CAAa,YAAT,MAAI;;;;;;EAMiCC,KAAK,EAAC;;;;EACLA,KAAK,EAAC;;;;;;;uBAnBpDC,mBAAA,CA2BM,cA1BJC,UAAkB,EAElBC,mBAAA,gBAAmB,EACnBJ,mBAAA,CAIM,OAJNK,UAIM,GAHJC,UAAa,E,gBACbN,mBAAA,CAAsD;+DAAtCO,MAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAtBH,MAAA,CAAAC,QAAQ,E,GACxBR,mBAAA,CAA8C;IAArCW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAO,SAAA,IAAAP,MAAA,CAAAO,SAAA,IAAAD,IAAA,CAAS;KAAE,YAAU,E,GAGtCT,mBAAA,kBAAqB,EACrBJ,mBAAA,CAcK,OAdLe,UAcK,GAbJC,UAAa,EACFT,MAAA,CAAAU,OAAO,CAACC,MAAM,I,cAAzBhB,mBAAA,CAUM,OAAAiB,UAAA,I,kBATJjB,mBAAA,CAQMkB,SAAA,QAAAC,WAAA,CARuBd,MAAA,CAAAU,OAAO,GAAvBK,MAAM,EAAEC,GAAG;yBAAxBrB,mBAAA,CAQM;MARiCqB,GAAG,EAAEA,GAAG;MAAEtB,KAAK,EAAC;QACrDuB,YAAA,CAMUC,sBAAA;MANIC,EAAE,kBAAkBJ,MAAM,CAACK,EAAE;;wBAC3C,MAIM,CAJN3B,mBAAA,CAIM,c,kCAHDsB,MAAM,CAACM,QAAQ,IAAG,GACrB,iBAAYN,MAAM,CAACO,MAAM,Y,cAAzB3B,mBAAA,CAAoE,QAApE4B,UAAoE,EAAX,MAAI,K,mCACjDR,MAAM,CAACO,MAAM,a,cAAzB3B,mBAAA,CAAsE,QAAtE6B,UAAsE,EAAX,MAAI,K;;;qDAKrE7B,mBAAA,CAAgC,OAAA8B,UAAA,EAApB,gBAAc,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}