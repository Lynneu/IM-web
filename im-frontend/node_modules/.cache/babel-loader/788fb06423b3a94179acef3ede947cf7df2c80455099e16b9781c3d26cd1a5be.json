{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive, computed, onMounted } from \"vue\";\nimport axios from 'axios';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'HelloWorld',\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    const user = computed(() => store.state.user); // get user from store\n    const socket = computed(() => store.state.websocket); // get websocket from store\n    const friends = ref([]);\n    const registerUser = reactive({\n      username: '',\n      email: '',\n      password: ''\n    });\n    const friendId = ref(\"\");\n    const friendName = ref(\"\");\n    const message = ref(\"\");\n    const receiveMessage = ref([]);\n    const fetchFriends = async () => {\n      const userId = user.value.id;\n      console.log('yes');\n      console.log(user.value);\n      console.log(userId);\n      const response = await axios.get(`http://localhost:8000/users/${userId}/friends`);\n      friends.value = response.data;\n    };\n    const backtoLogin = () => {\n      console.log('logout');\n      console.log(user.value);\n      socket.value.close();\n      store.commit('clearUserState'); // 调用 mutation 来清除用户状态\n      console.log(user.value);\n      router.push({\n        name: 'UserLogin'\n      });\n    };\n    const changeinfo = () => {\n      router.push({\n        name: 'userInfo'\n      });\n    };\n    onMounted(async () => {\n      await fetchFriends();\n      if (socket.value) {\n        socket.value.onmessage = event => {\n          console.log(\"Message from server: \", event.data);\n          const message = JSON.parse(event.data);\n          switch (message.type) {\n            case 'status':\n              {\n                // 更新好友的在线状态\n                const friend = friends.value.find(friend => friend.id === message.content.user_id);\n                if (friend) {\n                  friend.online = message.content.status === 'online';\n                }\n                break;\n              }\n            case 'text':\n              // Handle received messages as before\n              receiveMessage.value.push(event.data);\n              break;\n            default:\n              console.log(\"Unknown message type:\", message.type);\n          }\n        };\n        socket.value.onclose = event => {\n          console.log(\"Socket closed\", event);\n        };\n      }\n    });\n    const register = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/users/\", {\n          username: registerUser.username,\n          email: registerUser.email,\n          password: registerUser.password\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const addFriend = async () => {\n      try {\n        if (!user.value) {\n          throw new Error('User not logged in');\n        }\n        await axios.put(`http://localhost:8000/users/${user.value.id}/friends/${friendName.value}`);\n        alert('Friend added successfully');\n        await fetchFriends();\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const sendMessage = () => {\n      if (message.value.trim() !== '' && socket.value && socket.value.readyState === WebSocket.OPEN) {\n        console.log(message.value);\n        socket.value.send(JSON.stringify({\n          receiver_id: friendId.value,\n          content: message.value\n        }));\n        message.value = \"\";\n      }\n    };\n    return {\n      friends,\n      registerUser,\n      friendId,\n      friendName,\n      message,\n      receiveMessage,\n      user,\n      // return user\n      socket,\n      // return websocket\n      register,\n      addFriend,\n      sendMessage,\n      backtoLogin,\n      changeinfo\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","axios","useStore","useRouter","name","setup","router","store","user","state","socket","websocket","friends","registerUser","username","email","password","friendId","friendName","message","receiveMessage","fetchFriends","userId","value","id","console","log","response","get","data","backtoLogin","close","commit","push","changeinfo","onmessage","event","JSON","parse","type","friend","find","content","user_id","online","status","onclose","register","post","error","addFriend","Error","put","alert","sendMessage","trim","readyState","WebSocket","OPEN","send","stringify","receiver_id"],"sources":["/Users/lynneu/Documents/GitHub/IM-web/im-frontend/src/views/helloWorld.vue"],"sourcesContent":["<template>\n  <el-container direction=\"vertical\">\n    <el-header style=\"text-align: right;\">\n      <el-dropdown>\n        <el-button type=\"primary\">\n        <span v-if=\"user\" class=\"el-dropdown-link\">\n          {{ user.username }}\n          <i class=\"el-icon-arrow-down el-icon--right\"></i>\n        </span>\n      </el-button>\n        <template v-slot:dropdown>\n          <el-dropdown-menu>\n            <el-dropdown-item @click=\"changeinfo\">个人信息\n              <!-- <router-link :to=\"{ name: 'userInfo' }\">个人信息</router-link> -->\n            </el-dropdown-item>\n            <el-dropdown-item @click=\"backtoLogin\">注销</el-dropdown-item>\n          </el-dropdown-menu>\n        </template>\n      </el-dropdown>\n    </el-header>\n    <el-main>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"6\">\n          <h2>Test Chat</h2>\n          <el-card class=\"box-card\">\n            <el-form @submit.prevent=\"addFriend\">\n              <el-form-item label=\"Friend's ID\">\n                <el-input v-model=\"friendName\" placeholder=\"friend's ID\"></el-input>\n              </el-form-item>\n              <el-button type=\"primary\" native-type=\"submit\">Add Friend</el-button>\n            </el-form>\n          </el-card>\n        </el-col>\n        <el-col :span=\"18\">\n          <el-card class=\"box-card\">\n            <h2>好友列表</h2>\n            <el-list-item \n              v-for=\"(friend, key) in friends\" \n              :key=\"key\" \n              class=\"friend-item\"\n            >\n              <router-link \n                :to=\"{\n                  name: 'privatechat', \n                  params: { \n                    friendId: friend.id,\n                    friendName: friend.username \n                  }\n                }\"\n              >\n                <div>\n                  <el-tag v-if=\"friend.online\" type=\"success\">在线</el-tag>\n                  <el-tag v-if=\"!friend.online\" type=\"info\">离线</el-tag>\n                  {{ friend.username }}\n                </div>\n              </router-link>\n            </el-list-item>\n          </el-card>\n        </el-col>\n      </el-row>\n    </el-main>\n  </el-container>\n</template>\n\n\n<script>\nimport { ref, reactive, computed, onMounted } from \"vue\";\nimport axios from 'axios';\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\n\nexport default {\n  name: 'HelloWorld',\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n    const user = computed(() => store.state.user)  // get user from store\n    const socket = computed(() => store.state.websocket) // get websocket from store\n    const friends = ref([]);\n    const registerUser = reactive({\n      username: '',\n      email: '',\n      password: '',\n    });  \n    const friendId = ref(\"\");\n    const friendName = ref(\"\")\n    const message = ref(\"\");\n    const receiveMessage = ref([])\n\n    const fetchFriends = async () => {\n      const userId = user.value.id\n      console.log('yes')\n      console.log(user.value)\n      console.log(userId)\n      const response = await axios.get(`http://localhost:8000/users/${userId}/friends`)\n      friends.value = response.data\n    }\n    \n    const backtoLogin = () => {\n      console.log('logout')\n      console.log(user.value)\n      socket.value.close()\n      store.commit('clearUserState');  // 调用 mutation 来清除用户状态\n      console.log(user.value)\n      \n      router.push({ name: 'UserLogin' });\n    }\n\n    const changeinfo = () => {\n      router.push({ name: 'userInfo' });\n    }\n\n    onMounted(async () => {\n      await fetchFriends();\n      if (socket.value) {\n        socket.value.onmessage = (event) => {\n          console.log(\"Message from server: \", event.data);\n          const message = JSON.parse(event.data);\n\n          switch (message.type) {\n            case 'status': {\n              // 更新好友的在线状态\n              const friend = friends.value.find(friend => friend.id === message.content.user_id);\n              if (friend) {\n                friend.online = message.content.status === 'online';\n              }\n              break;\n            }\n            case 'text':\n              // Handle received messages as before\n              receiveMessage.value.push(event.data)\n              break;\n            default:\n              console.log(\"Unknown message type:\", message.type);\n          }\n        };\n  \n        socket.value.onclose = (event) => {\n          console.log(\"Socket closed\", event);\n        };\n      }\n    });\n\n    const register = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/users/\", {\n          username: registerUser.username,\n          email: registerUser.email,\n          password: registerUser.password,\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const addFriend = async () => {\n      try {\n        if (!user.value) {\n          throw new Error('User not logged in');\n        }\n        await axios.put(`http://localhost:8000/users/${user.value.id}/friends/${friendName.value}`);\n        alert('Friend added successfully');\n        await fetchFriends(); \n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const sendMessage = () => {\n      if (message.value.trim() !== '' && socket.value && socket.value.readyState === WebSocket.OPEN) {\n        console.log(message.value);\n        socket.value.send(JSON.stringify({\n          receiver_id: friendId.value,\n          content: message.value\n        }));\n        message.value = \"\";\n      }\n    };\n\n    return {\n      friends,\n      registerUser,\n      friendId,\n      friendName,\n      message,\n      receiveMessage,\n      user,  // return user\n      socket, // return websocket\n      register,\n      addFriend,\n      sendMessage,\n      backtoLogin,\n      changeinfo\n    };\n  },\n};\n</script>\n\n  \n  <style scoped>\n/* .section {\n  margin-bottom: 2rem;\n}\n\n.friend-item, .message-item {\n  border: 1px solid #ccc;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.status-online {\n  color: green;\n}\n\n.status-offline {\n  color: red;\n} */\n\n.el-header {\n  background-color: #B3C0D1;\n  color: #333;\n  line-height: 60px;\n}\n\n.friend-item {\n  margin-bottom: 15px;\n}\n.el-dropdown-link {\n  color: #333;        /* 更改文字颜色 */\n  font-size: 20px;    /* 更改字体大小 */\n  font-weight: bold;  /* 设置字体为粗体 */\n  padding: 20px;      /* 设置内边距 */\n}\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}