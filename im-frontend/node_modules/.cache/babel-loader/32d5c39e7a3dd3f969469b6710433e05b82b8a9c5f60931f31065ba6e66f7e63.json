{"ast":null,"code":"import { ref, reactive, computed } from \"vue\";\nimport axios from 'axios';\nexport default {\n  name: 'HelloWorld',\n  setup() {\n    const registerUser = reactive({\n      username: '',\n      email: '',\n      password: ''\n    });\n    const loginUser = reactive({\n      username: '',\n      password: ''\n    });\n    const friendId = ref(\"\");\n    const message = ref(\"\");\n    const receiveMessage = ref(\"\");\n    let socket = null;\n    const user = computed(() => {\n      // Get user from localStorage and parse it\n      const storedUser = localStorage.getItem('user');\n      return storedUser ? JSON.parse(storedUser) : null;\n    });\n    const register = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/users/\", {\n          username: registerUser.username,\n          email: registerUser.email,\n          password: registerUser.password\n        });\n        console.log(response.data);\n        connectSocket(response.data.id);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const login = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/login\", {\n          username: loginUser.username,\n          password: loginUser.password\n        });\n        localStorage.setItem('user', JSON.stringify(response.data));\n        connectSocket(response.data.id);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const addFriend = async () => {\n      try {\n        if (!user.value) {\n          throw new Error('User not logged in');\n        }\n        await axios.put(`http://localhost:8000/users/${user.value.id}/friends/${friendId.value}`);\n        alert('Friend added successfully');\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const connectSocket = userId => {\n      socket = new WebSocket(\"ws://localhost:8000/ws/\" + userId);\n      socket.onopen = () => {\n        console.log(\"success!\");\n      };\n      socket.onmessage = event => {\n        console.log(\"Message from server: \", event.data);\n        receiveMessage.value += event.data;\n      };\n      socket.onclose = event => {\n        console.log(\"Socket closed\", event);\n      };\n    };\n    const sendMessage = () => {\n      if (socket && socket.readyState === WebSocket.OPEN) {\n        socket.send(JSON.stringify({\n          receiver_id: friendId.value,\n          content: message.value\n        }));\n        message.value = \"\";\n      }\n    };\n    return {\n      registerUser,\n      loginUser,\n      friendId,\n      message,\n      receiveMessage,\n      register,\n      login,\n      addFriend,\n      sendMessage\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","axios","name","setup","registerUser","username","email","password","loginUser","friendId","message","receiveMessage","socket","user","storedUser","localStorage","getItem","JSON","parse","register","response","post","console","log","data","connectSocket","id","error","login","setItem","stringify","addFriend","value","Error","put","alert","userId","WebSocket","onopen","onmessage","event","onclose","sendMessage","readyState","OPEN","send","receiver_id","content"],"sources":["/Users/lynneu/Documents/GitHub/im-frontend/src/views/helloWorld.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Test Chat</h1>\n  \n      <!-- User Registration -->\n      <div>\n        <h2>注册</h2>\n        <input v-model=\"registerUser.username\" placeholder=\"username\" />\n        <input v-model=\"registerUser.email\" placeholder=\"email\" />\n        <input v-model=\"registerUser.password\" placeholder=\"password\" type=\"password\" />\n        <button @click=\"register\">Register</button>\n      </div>\n    \n      <!-- Add Friend -->\n      <div>\n        <h2>添加好友</h2>\n        <input v-model=\"friendId\" placeholder=\"friend's ID\" />\n        <button @click=\"addFriend\">Add Friend</button>\n      </div>\n  \n      <!-- Send Message -->\n      <div>\n        <h2>发送消息</h2>\n        <input v-model=\"friendId\" placeholder=\"friend's ID\" />\n        <input v-model=\"message\" placeholder=\"message\" />\n        <button @click=\"sendMessage\">Send Message</button>\n      </div>\n\n       <!-- 好友列表 -->\n       <div>\n        <h2>好友列表</h2>\n        <input v-model=\"friendId\" placeholder=\"friend's ID\" />\n        <input v-model=\"message\" placeholder=\"message\" />\n        <button @click=\"sendMessage\">Send Message</button>\n      </div>\n  \n       <!-- Receive Message -->\n       <div>\n        <h2>消息列表</h2>\n        <text>{{ receiveMessage }}</text>\n      </div>\n  \n    </div>\n  </template>\n  \n  <script>\n  import { ref, reactive, computed } from \"vue\";\n  import axios from 'axios';\n  \n  export default {\n    name: 'HelloWorld',\n    setup() {\n      const registerUser = reactive({\n        username: '',\n        email: '',\n        password: '',\n      });\n      \n      const loginUser = reactive({\n        username: '',\n        password: '',\n      });\n  \n      const friendId = ref(\"\");\n      const message = ref(\"\");\n      const receiveMessage = ref(\"\")\n      let socket = null;\n  \n      const user = computed(() => {\n        // Get user from localStorage and parse it\n        const storedUser = localStorage.getItem('user');\n        return storedUser ? JSON.parse(storedUser) : null;\n      });\n  \n      const register = async () => {\n        try {\n          const response = await axios.post(\"http://localhost:8000/users/\", {\n            username: registerUser.username,\n            email: registerUser.email,\n            password: registerUser.password,\n          });\n          console.log(response.data);\n          connectSocket(response.data.id);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n      const login = async () => {\n        try {\n          const response = await axios.post(\"http://localhost:8000/login\", {\n            username: loginUser.username,\n            password: loginUser.password,\n          });\n          localStorage.setItem('user', JSON.stringify(response.data));\n          connectSocket(response.data.id);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n      const addFriend = async () => {\n        try {\n          if (!user.value) {\n            throw new Error('User not logged in');\n          }\n          await axios.put(`http://localhost:8000/users/${user.value.id}/friends/${friendId.value}`);\n          alert('Friend added successfully');\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n      const connectSocket = (userId) => {\n        socket = new WebSocket(\"ws://localhost:8000/ws/\" + userId);\n  \n        socket.onopen = () => {\n          console.log(\"success!\")\n        }\n        socket.onmessage = (event) => {\n          console.log(\"Message from server: \", event.data);\n          receiveMessage.value += event.data;\n        };\n        socket.onclose = (event) => {\n        console.log(\"Socket closed\", event);\n  };\n  \n      };\n  \n      const sendMessage = () => {\n        if (socket && socket.readyState === WebSocket.OPEN) {\n          socket.send(JSON.stringify({\n            receiver_id: friendId.value,\n            content: message.value\n          }));\n          message.value = \"\";\n        }\n      };\n  \n      return {\n        registerUser,\n        loginUser,\n        friendId,\n        message,\n        receiveMessage,\n        register,\n        login,\n        addFriend,\n        sendMessage,\n      };\n    },\n  };\n  </script>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}