{"ast":null,"code":"import { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'userInfo',\n  setup() {\n    const store = useStore();\n    const form = ref({\n      username: store.state.user.username,\n      password: '',\n      email: store.state.user.email\n    });\n    const isEditing = ref(false);\n    const backToPreviousPage = () => {\n      // TODO: 返回上一界面的逻辑\n    };\n    const startEditing = () => {\n      isEditing.value = true;\n    };\n    const submitForm = async () => {\n      const formData = form.value;\n      // TODO: 调用后端的更新用户接口，传递formData，并处理返回的数据\n      try {\n        const response = await fetch(`/users/${store.state.user.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const result = await response.json();\n        if (result.username === formData.username && result.email === formData.email) {\n          ElMessage.success('个人信息修改成功');\n          // TODO: 更新Vuex中的用户状态\n          store.commit('updateUser', result);\n        } else {\n          ElMessage.error('个人信息修改失败');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        ElMessage.error('服务器出现问题，请稍后再试');\n      } finally {\n        isEditing.value = false;\n      }\n    };\n    return {\n      backToPreviousPage,\n      form,\n      submitForm,\n      isEditing,\n      startEditing\n    };\n  }\n};","map":{"version":3,"names":["ref","useStore","ElMessage","name","setup","store","form","username","state","user","password","email","isEditing","backToPreviousPage","startEditing","value","submitForm","formData","response","fetch","id","method","headers","body","JSON","stringify","ok","Error","result","json","success","commit","error","console"],"sources":["/Users/lynneu/Documents/GitHub/IM-web/im-frontend/src/views/userInfo.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n      <el-button @click=\"backToPreviousPage\" class=\"back-btn\">返回</el-button>\n      <el-card class=\"box-card\" v-if=\"!isEditing\">\n        <template v-slot:header>\n          <span>个人信息</span>\n        </template>\n        <p><strong>用户名: </strong>{{ form.username }}</p>\n        <p><strong>邮箱: </strong>{{ form.email }}</p>\n        <el-button @click=\"startEditing\" type=\"primary\">修改</el-button>\n      </el-card>\n      <el-card class=\"box-card\" v-else>\n        <template v-slot:header>\n          <span>修改个人信息</span>\n        </template>\n        <el-form ref=\"form\" :model=\"form\" label-width=\"120px\">\n          <el-form-item label=\"用户名\">\n            <el-input v-model=\"form.username\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"密码\">\n            <el-input v-model=\"form.password\" type=\"password\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"邮箱\">\n            <el-input v-model=\"form.email\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"submitForm('form')\">提交</el-button>\n          </el-form-item>\n        </el-form>\n      </el-card>\n    </div>\n  </template>\n  \n  \n  <script>\n  import { ref } from 'vue';\n  import { useStore } from 'vuex';\n  import { ElMessage } from 'element-plus';\n  \n  export default {\n    name: 'userInfo',\n    setup() {\n      const store = useStore();\n      const form = ref({\n        username: store.state.user.username,\n        password: '',\n        email: store.state.user.email,\n      });\n      const isEditing = ref(false);\n      const backToPreviousPage = () => {\n        // TODO: 返回上一界面的逻辑\n      };\n  \n      const startEditing = () => {\n        isEditing.value = true;\n      };\n  \n      const submitForm = async () => {\n        const formData = form.value;\n        // TODO: 调用后端的更新用户接口，传递formData，并处理返回的数据\n        try {\n          const response = await fetch(`/users/${store.state.user.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(formData),\n          });\n          if (!response.ok) throw new Error('Network response was not ok');\n          const result = await response.json();\n  \n          if (result.username === formData.username && result.email === formData.email) {\n            ElMessage.success('个人信息修改成功');\n            // TODO: 更新Vuex中的用户状态\n            store.commit('updateUser', result);\n          } else {\n            ElMessage.error('个人信息修改失败');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          ElMessage.error('服务器出现问题，请稍后再试');\n        } finally {\n          isEditing.value = false;\n        }\n      };\n  \n      return { backToPreviousPage, form, submitForm, isEditing, startEditing };\n    },\n  };\n  </script>\n\n\n<style scoped>\n.container {\n  padding: 50px;\n}\n\n.box-card {\n  margin-bottom: 20px;\n}\n\n.back-btn {\n  margin-bottom: 20px;\n}\n</style>"],"mappings":"AAmCE,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAQ,QAAS,cAAc;AAExC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,IAAG,GAAIN,GAAG,CAAC;MACfO,QAAQ,EAAEF,KAAK,CAACG,KAAK,CAACC,IAAI,CAACF,QAAQ;MACnCG,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAEN,KAAK,CAACG,KAAK,CAACC,IAAI,CAACE;IAC1B,CAAC,CAAC;IACF,MAAMC,SAAQ,GAAIZ,GAAG,CAAC,KAAK,CAAC;IAC5B,MAAMa,kBAAiB,GAAIA,CAAA,KAAM;MAC/B;IAAA,CACD;IAED,MAAMC,YAAW,GAAIA,CAAA,KAAM;MACzBF,SAAS,CAACG,KAAI,GAAI,IAAI;IACxB,CAAC;IAED,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAO,GAAIX,IAAI,CAACS,KAAK;MAC3B;MACA,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMC,KAAK,CAAE,UAASd,KAAK,CAACG,KAAK,CAACC,IAAI,CAACW,EAAG,EAAC,EAAE;UAC5DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;QAC/B,CAAC,CAAC;QACF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChE,MAAMC,MAAK,GAAI,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QAEpC,IAAID,MAAM,CAACrB,QAAO,KAAMU,QAAQ,CAACV,QAAO,IAAKqB,MAAM,CAACjB,KAAI,KAAMM,QAAQ,CAACN,KAAK,EAAE;UAC5ET,SAAS,CAAC4B,OAAO,CAAC,UAAU,CAAC;UAC7B;UACAzB,KAAK,CAAC0B,MAAM,CAAC,YAAY,EAAEH,MAAM,CAAC;QACpC,OAAO;UACL1B,SAAS,CAAC8B,KAAK,CAAC,UAAU,CAAC;QAC7B;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B9B,SAAS,CAAC8B,KAAK,CAAC,eAAe,CAAC;MAClC,UAAU;QACRpB,SAAS,CAACG,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;IAED,OAAO;MAAEF,kBAAkB;MAAEP,IAAI;MAAEU,UAAU;MAAEJ,SAAS;MAAEE;IAAa,CAAC;EAC1E;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}