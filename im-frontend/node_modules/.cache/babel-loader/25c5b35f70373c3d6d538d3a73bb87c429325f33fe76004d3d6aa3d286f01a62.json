{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      user1Id: null,\n      user2Id: null,\n      user1Socket: null,\n      user2Socket: null,\n      user1Messages: [],\n      user2Messages: [],\n      messageContent: ''\n    };\n  },\n  methods: {\n    async createUsers() {\n      const user1Response = await axios.post('http://localhost:8000/users/', {\n        username: 'User2',\n        email: 'user3@123.com',\n        password: '123'\n      });\n      this.user1Id = user1Response.data.id;\n      const user2Response = await axios.post('http://localhost:8000/users/', {\n        name: 'User3',\n        email: 'user3@123.com',\n        password: '123'\n      });\n      this.user2Id = user2Response.data.id;\n    },\n    connectWebSocket(userId) {\n      const socket = new WebSocket(`ws://localhost:8000/ws/${userId}`);\n      socket.addEventListener('message', event => {\n        const message = JSON.parse(event.data);\n        if (userId === this.user1Id) {\n          this.user1Messages.push(message);\n        } else if (userId === this.user2Id) {\n          this.user2Messages.push(message);\n        }\n      });\n      if (userId === this.user1Id) {\n        this.user1Socket = socket;\n      } else if (userId === this.user2Id) {\n        this.user2Socket = socket;\n      }\n    },\n    sendMessage(senderId, receiverId, content) {\n      const message = {\n        receiver_id: receiverId,\n        content\n      };\n      if (senderId === this.user1Id) {\n        this.user1Socket.send(JSON.stringify(message));\n      } else if (senderId === this.user2Id) {\n        this.user2Socket.send(JSON.stringify(message));\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user1Id","user2Id","user1Socket","user2Socket","user1Messages","user2Messages","messageContent","methods","createUsers","user1Response","post","username","email","password","id","user2Response","name","connectWebSocket","userId","socket","WebSocket","addEventListener","event","message","JSON","parse","push","sendMessage","senderId","receiverId","content","receiver_id","send","stringify"],"sources":["/Users/lynneu/Documents/GitHub/im-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Chat App</h1>\n    <button @click=\"createUsers\">Create Users</button>\n    <button @click=\"connectWebSocket(user1Id)\">Connect User 1 WebSocket</button>\n    <button @click=\"connectWebSocket(user2Id)\">Connect User 2 WebSocket</button>\n    <div>\n      <h2>Messages for User 1</h2>\n      <div v-for=\"message in user1Messages\" :key=\"message.id\">\n        <p>{{message.content}}</p>\n      </div>\n    </div>\n    <div>\n      <h2>Messages for User 2</h2>\n      <div v-for=\"message in user2Messages\" :key=\"message.id\">\n        <p>{{message.content}}</p>\n      </div>\n    </div>\n    <div>\n      <h2>Send Message</h2>\n      <input type=\"text\" v-model=\"messageContent\" />\n      <button @click=\"sendMessage(user1Id, user2Id, messageContent)\">Send from User 1 to User 2</button>\n      <button @click=\"sendMessage(user2Id, user1Id, messageContent)\">Send from User 2 to User 1</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      user1Id: null,\n      user2Id: null,\n      user1Socket: null,\n      user2Socket: null,\n      user1Messages: [],\n      user2Messages: [],\n      messageContent: ''\n    };\n  },\n  methods: {\n    async createUsers() {\n      const user1Response = await axios.post('http://localhost:8000/users/', { username: 'User2' , email: 'user3@123.com', password: '123'});\n      this.user1Id = user1Response.data.id;\n\n      const user2Response = await axios.post('http://localhost:8000/users/', { name: 'User3' , email: 'user3@123.com', password: '123'});\n      this.user2Id = user2Response.data.id;\n    },\n    connectWebSocket(userId) {\n      const socket = new WebSocket(`ws://localhost:8000/ws/${userId}`);\n      \n      socket.addEventListener('message', event => {\n        const message = JSON.parse(event.data);\n        if (userId === this.user1Id) {\n          this.user1Messages.push(message);\n        } else if (userId === this.user2Id) {\n          this.user2Messages.push(message);\n        }\n      });\n      \n      if (userId === this.user1Id) {\n        this.user1Socket = socket;\n      } else if (userId === this.user2Id) {\n        this.user2Socket = socket;\n      }\n    },\n    sendMessage(senderId, receiverId, content) {\n      const message = { receiver_id: receiverId, content };\n      if (senderId === this.user1Id) {\n        this.user1Socket.send(JSON.stringify(message));\n      } else if (senderId === this.user2Id) {\n        this.user2Socket.send(JSON.stringify(message));\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";AA4BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE,IAAI;MACjBC,aAAa,EAAE,EAAE;MACjBC,aAAa,EAAE,EAAE;MACjBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,MAAMC,aAAY,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,8BAA8B,EAAE;QAAEC,QAAQ,EAAE,OAAM;QAAIC,KAAK,EAAE,eAAe;QAAEC,QAAQ,EAAE;MAAK,CAAC,CAAC;MACtI,IAAI,CAACb,OAAM,GAAIS,aAAa,CAACV,IAAI,CAACe,EAAE;MAEpC,MAAMC,aAAY,GAAI,MAAMjB,KAAK,CAACY,IAAI,CAAC,8BAA8B,EAAE;QAAEM,IAAI,EAAE,OAAM;QAAIJ,KAAK,EAAE,eAAe;QAAEC,QAAQ,EAAE;MAAK,CAAC,CAAC;MAClI,IAAI,CAACZ,OAAM,GAAIc,aAAa,CAAChB,IAAI,CAACe,EAAE;IACtC,CAAC;IACDG,gBAAgBA,CAACC,MAAM,EAAE;MACvB,MAAMC,MAAK,GAAI,IAAIC,SAAS,CAAE,0BAAyBF,MAAO,EAAC,CAAC;MAEhEC,MAAM,CAACE,gBAAgB,CAAC,SAAS,EAAEC,KAAI,IAAK;QAC1C,MAAMC,OAAM,GAAIC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACvB,IAAI,CAAC;QACtC,IAAImB,MAAK,KAAM,IAAI,CAAClB,OAAO,EAAE;UAC3B,IAAI,CAACI,aAAa,CAACsB,IAAI,CAACH,OAAO,CAAC;QAClC,OAAO,IAAIL,MAAK,KAAM,IAAI,CAACjB,OAAO,EAAE;UAClC,IAAI,CAACI,aAAa,CAACqB,IAAI,CAACH,OAAO,CAAC;QAClC;MACF,CAAC,CAAC;MAEF,IAAIL,MAAK,KAAM,IAAI,CAAClB,OAAO,EAAE;QAC3B,IAAI,CAACE,WAAU,GAAIiB,MAAM;MAC3B,OAAO,IAAID,MAAK,KAAM,IAAI,CAACjB,OAAO,EAAE;QAClC,IAAI,CAACE,WAAU,GAAIgB,MAAM;MAC3B;IACF,CAAC;IACDQ,WAAWA,CAACC,QAAQ,EAAEC,UAAU,EAAEC,OAAO,EAAE;MACzC,MAAMP,OAAM,GAAI;QAAEQ,WAAW,EAAEF,UAAU;QAAEC;MAAQ,CAAC;MACpD,IAAIF,QAAO,KAAM,IAAI,CAAC5B,OAAO,EAAE;QAC7B,IAAI,CAACE,WAAW,CAAC8B,IAAI,CAACR,IAAI,CAACS,SAAS,CAACV,OAAO,CAAC,CAAC;MAChD,OAAO,IAAIK,QAAO,KAAM,IAAI,CAAC3B,OAAO,EAAE;QACpC,IAAI,CAACE,WAAW,CAAC6B,IAAI,CAACR,IAAI,CAACS,SAAS,CAACV,OAAO,CAAC,CAAC;MAChD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}