{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0fa23b7a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"text-align\": \"center\",\n    \"font-size\": \"large\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Test Chat\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_dropdown_item = _resolveComponent(\"el-dropdown-item\");\n  const _component_el_dropdown_menu = _resolveComponent(\"el-dropdown-menu\");\n  const _component_el_dropdown = _resolveComponent(\"el-dropdown\");\n  const _component_el_header = _resolveComponent(\"el-header\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  return _openBlock(), _createBlock(_component_el_container, {\n    direction: \"vertical\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_header, {\n      style: {\n        \"text-align\": \"right\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_dropdown, null, {\n        dropdown: _withCtx(() => [_createVNode(_component_el_dropdown_menu, null, {\n          default: _withCtx(() => [_createVNode(_component_el_dropdown_item, {\n            onClick: $setup.changeinfo\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"个人信息 \"), _createCommentVNode(\" <router-link :to=\\\"{ name: 'userInfo' }\\\">个人信息</router-link> \")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_dropdown_item, {\n            onClick: $setup.backtoLogin\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"注销\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          class: \"circular-button\"\n        }, {\n          default: _withCtx(() => [$setup.user ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, _toDisplayString($setup.user.username.slice(-1)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_main, null, {\n      default: _withCtx(() => [_createVNode(_component_el_row, {\n        gutter: 20\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 6\n        }, {\n          default: _withCtx(() => [_hoisted_2, _createVNode(_component_el_card, {\n            class: \"box-card\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_form, {\n              onSubmit: _withModifiers($setup.addFriend, [\"prevent\"])\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_form_item, {\n                label: \"用户名\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_input, {\n                  modelValue: $setup.friendName,\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.friendName = $event),\n                  placeholder: \"请输入用户名\"\n                }, null, 8 /* PROPS */, [\"modelValue\"])]),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_button, {\n                type: \"primary\",\n                \"native-type\": \"submit\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(\"添加好友\")]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"onSubmit\"])]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_col, {\n          span: 18\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_card, {\n            class: \"box-card\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_table, {\n              data: $setup.friends,\n              style: {\n                \"width\": \"100%\"\n              },\n              onRowClick: $setup.goToChat\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_table_column, {\n                prop: \"username\",\n                label: \"用户名\"\n              }), _createVNode(_component_el_table_column, {\n                label: \"状态\",\n                width: \"180\"\n              }, {\n                default: _withCtx(scope => [_createVNode(_component_el_tag, {\n                  type: scope.row.online ? 'success' : 'info'\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.online ? '在线' : '离线'), 1 /* TEXT */)]),\n\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"data\", \"onRowClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["style","_createElementVNode","_createBlock","_component_el_container","direction","_createVNode","_component_el_header","_component_el_dropdown","dropdown","_withCtx","_component_el_dropdown_menu","_component_el_dropdown_item","onClick","$setup","changeinfo","_createCommentVNode","backtoLogin","_component_el_button","class","user","_createElementBlock","_hoisted_1","_toDisplayString","username","slice","_component_el_main","_component_el_row","gutter","_component_el_col","span","_hoisted_2","_component_el_card","_component_el_form","onSubmit","_withModifiers","addFriend","_component_el_form_item","label","_component_el_input","friendName","$event","placeholder","type","_component_el_table","data","friends","onRowClick","goToChat","_component_el_table_column","prop","width","default","scope","_component_el_tag","row","online"],"sources":["/Users/lynneu/Documents/GitHub/IM-web/im-frontend/src/views/helloWorld.vue"],"sourcesContent":["<template>\n  <el-container direction=\"vertical\">\n    <el-header style=\"text-align: right;\">\n      <el-dropdown>\n        <el-button class=\"circular-button\">\n        <span v-if=\"user\" style=\"text-align: center; font-size: large;\">\n          {{ user.username.slice(-1) }}\n          \n        </span>\n      </el-button>\n        <template v-slot:dropdown>\n          <el-dropdown-menu>\n            <el-dropdown-item @click=\"changeinfo\">个人信息\n              <!-- <router-link :to=\"{ name: 'userInfo' }\">个人信息</router-link> -->\n            </el-dropdown-item>\n            <el-dropdown-item @click=\"backtoLogin\">注销</el-dropdown-item>\n          </el-dropdown-menu>\n        </template>\n      </el-dropdown>\n    </el-header>\n    <el-main>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"6\">\n          <h2>Test Chat</h2>\n          <el-card class=\"box-card\">\n            <el-form @submit.prevent=\"addFriend\">\n              <el-form-item label=\"用户名\">\n                <el-input v-model=\"friendName\" placeholder=\"请输入用户名\"></el-input>\n              </el-form-item>\n              <el-button type=\"primary\" native-type=\"submit\">添加好友</el-button>\n            </el-form>\n          </el-card>\n        </el-col>\n        <el-col :span=\"18\">\n          <el-card class=\"box-card\">\n            <el-table :data=\"friends\" style=\"width: 100%\" @row-click=\"goToChat\">\n              <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\n              <el-table-column\n                label=\"状态\"\n                width=\"180\"\n              >\n                <template #default=\"scope\">\n                  <el-tag :type=\"scope.row.online ? 'success' : 'info'\">{{ scope.row.online ? '在线' : '离线' }}</el-tag>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-card>\n        </el-col>\n      </el-row>\n    </el-main>\n  </el-container>\n</template>\n\n\n<script>\nimport { ref, reactive, computed, onMounted } from \"vue\";\nimport axios from 'axios';\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\n\nexport default {\n  name: 'HelloWorld',\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n    const user = computed(() => store.state.user)  // get user from store\n    const socket = computed(() => store.state.websocket) // get websocket from store\n    const friends = ref([]);\n    const registerUser = reactive({\n      username: '',\n      email: '',\n      password: '',\n    });  \n    const friendId = ref(\"\");\n    const friendName = ref(\"\")\n    const message = ref(\"\");\n    const receiveMessage = ref([])\n\n    const goToChat = (row) => {\n      router.push({\n        name: 'privatechat', \n        params: { \n          friendId: row.id,\n          friendName: row.username \n        }\n      });\n    };\n\n    const fetchFriends = async () => {\n      const userId = user.value.id\n      console.log('yes')\n      console.log(user.value)\n      console.log(userId)\n      const response = await axios.get(`http://localhost:8000/users/${userId}/friends`)\n      friends.value = response.data\n    }\n    \n    const backtoLogin = () => {\n      console.log('logout')\n      console.log(user.value)\n      socket.value.close()\n      store.commit('clearUserState');  // 调用 mutation 来清除用户状态\n      console.log(user.value)\n      \n      router.push({ name: 'UserLogin' });\n    }\n\n    const changeinfo = () => {\n      router.push({ name: 'userInfo' });\n    }\n\n    onMounted(async () => {\n      await fetchFriends();\n      if (socket.value) {\n        socket.value.onmessage = (event) => {\n          console.log(\"Message from server: \", event.data);\n          const message = JSON.parse(event.data);\n\n          switch (message.type) {\n            case 'status': {\n              // 更新好友的在线状态\n              const friend = friends.value.find(friend => friend.id === message.content.user_id);\n              if (friend) {\n                friend.online = message.content.status === 'online';\n              }\n              break;\n            }\n            case 'text':\n              // Handle received messages as before\n              receiveMessage.value.push(event.data)\n              break;\n            default:\n              console.log(\"Unknown message type:\", message.type);\n          }\n        };\n  \n        socket.value.onclose = (event) => {\n          console.log(\"Socket closed\", event);\n        };\n      }\n    });\n\n    const register = async () => {\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8000/users/\", {\n          username: registerUser.username,\n          email: registerUser.email,\n          password: registerUser.password,\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const addFriend = async () => {\n      try {\n        if (!user.value) {\n          throw new Error('User not logged in');\n        }\n        await axios.put(`http://localhost:8000/users/${user.value.id}/friends/${friendName.value}`);\n        alert('Friend added successfully');\n        await fetchFriends(); \n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const sendMessage = () => {\n      if (message.value.trim() !== '' && socket.value && socket.value.readyState === WebSocket.OPEN) {\n        console.log(message.value);\n        socket.value.send(JSON.stringify({\n          receiver_id: friendId.value,\n          content: message.value\n        }));\n        message.value = \"\";\n      }\n    };\n\n    return {\n      friends,\n      registerUser,\n      friendId,\n      friendName,\n      message,\n      receiveMessage,\n      user,  // return user\n      socket, // return websocket\n      register,\n      addFriend,\n      sendMessage,\n      backtoLogin,\n      changeinfo,\n      goToChat\n    };\n  },\n};\n</script>\n\n  \n  <style scoped>\n/* .section {\n  margin-bottom: 2rem;\n}\n\n.friend-item, .message-item {\n  border: 1px solid #ccc;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.status-online {\n  color: green;\n}\n\n.status-offline {\n  color: red;\n} */\n\n.el-header {\n  background-color: #337ecc;\n  color: #333;\n  line-height: 60px;\n}\n\n.friend-item {\n  margin-bottom: 15px;\n}\n\n.circular-button {\n  border-radius: 50%; /* 设置圆角为 50%，使按钮形状变为圆形 */\n  width: 50px; /* 可根据需要修改 */\n  height: 50px; /* 可根据需要修改 */\n  display: flex; /* 用于设置按钮中的元素居中 */\n  align-items: center; /* 垂直居中 */\n  justify-content: center; /* 水平居中 */\n  margin: 5px;\n}\n</style>"],"mappings":";;;;EAK0BA,KAA6C,EAA7C;IAAA;IAAA;EAAA;;gEAkBhBC,mBAAA,CAAkB,YAAd,WAAS;;;;;;;;;;;;;;;;;;;uBAtBrBC,YAAA,CAiDeC,uBAAA;IAjDDC,SAAS,EAAC;EAAU;sBAChC,MAiBY,CAjBZC,YAAA,CAiBYC,oBAAA;MAjBDN,KAA0B,EAA1B;QAAA;MAAA;IAA0B;wBACnC,MAec,CAfdK,YAAA,CAecE,sBAAA;QARKC,QAAQ,EAAAC,QAAA,CACvB,MAKmB,CALnBJ,YAAA,CAKmBK,2BAAA;4BAJjB,MAEmB,CAFnBL,YAAA,CAEmBM,2BAAA;YAFAC,OAAK,EAAEC,MAAA,CAAAC;UAAU;8BAAE,MACpC,C,iBADoC,OACpC,GAAAC,mBAAA,kEAAmE,C;;0CAErEV,YAAA,CAA4DM,2BAAA;YAAzCC,OAAK,EAAEC,MAAA,CAAAG;UAAW;8BAAE,MAAE,C,iBAAF,IAAE,E;;;;;;0BAX7C,MAKU,CALVX,YAAA,CAKUY,oBAAA;UALCC,KAAK,EAAC;QAAiB;4BAClC,MAGO,CAHKL,MAAA,CAAAM,IAAI,I,cAAhBC,mBAAA,CAGO,QAHPC,UAGO,EAAAC,gBAAA,CAFFT,MAAA,CAAAM,IAAI,CAACI,QAAQ,CAACC,KAAK,wB;;;;;;;;QAc5BnB,YAAA,CA6BUoB,kBAAA;wBA5BR,MA2BS,CA3BTpB,YAAA,CA2BSqB,iBAAA;QA3BAC,MAAM,EAAE;MAAE;0BACjB,MAUS,CAVTtB,YAAA,CAUSuB,iBAAA;UAVAC,IAAI,EAAE;QAAC;4BACd,MAAkB,CAAlBC,UAAkB,EAClBzB,YAAA,CAOU0B,kBAAA;YAPDb,KAAK,EAAC;UAAU;8BACvB,MAKU,CALVb,YAAA,CAKU2B,kBAAA;cALAC,QAAM,EAAAC,cAAA,CAAUrB,MAAA,CAAAsB,SAAS;;gCACjC,MAEe,CAFf9B,YAAA,CAEe+B,uBAAA;gBAFDC,KAAK,EAAC;cAAK;kCACvB,MAA+D,CAA/DhC,YAAA,CAA+DiC,mBAAA;8BAA5CzB,MAAA,CAAA0B,UAAU;6EAAV1B,MAAA,CAAA0B,UAAU,GAAAC,MAAA;kBAAEC,WAAW,EAAC;;;kBAE7CpC,YAAA,CAA+DY,oBAAA;gBAApDyB,IAAI,EAAC,SAAS;gBAAC,aAAW,EAAC;;kCAAS,MAAI,C,iBAAJ,MAAI,E;;;;;;;;;;YAIzDrC,YAAA,CAcSuB,iBAAA;UAdAC,IAAI,EAAE;QAAE;4BACf,MAYU,CAZVxB,YAAA,CAYU0B,kBAAA;YAZDb,KAAK,EAAC;UAAU;8BACvB,MAUW,CAVXb,YAAA,CAUWsC,mBAAA;cAVAC,IAAI,EAAE/B,MAAA,CAAAgC,OAAO;cAAE7C,KAAmB,EAAnB;gBAAA;cAAA,CAAmB;cAAE8C,UAAS,EAAEjC,MAAA,CAAAkC;;gCACxD,MAA+D,CAA/D1C,YAAA,CAA+D2C,0BAAA;gBAA9CC,IAAI,EAAC,UAAU;gBAACZ,KAAK,EAAC;kBACvChC,YAAA,CAOkB2C,0BAAA;gBANhBX,KAAK,EAAC,IAAI;gBACVa,KAAK,EAAC;;gBAEKC,OAAO,EAAA1C,QAAA,CAAE2C,KAAK,KACvB/C,YAAA,CAAmGgD,iBAAA;kBAA1FX,IAAI,EAAEU,KAAK,CAACE,GAAG,CAACC,MAAM;;oCAAuB,MAAoC,C,kCAAjCH,KAAK,CAACE,GAAG,CAACC,MAAM,+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}